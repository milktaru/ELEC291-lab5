0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Thu Mar 07 15:29:38 2024
0000              5   ;--------------------------------------------------------
                  5   $name lab5
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _TIMER0_Init
0000             30            public _Volts_at_Pin
0000             31            public _ADC_at_Pin
0000             32            public _InitPinADC
0000             33            public _getsn
0000             34            public _LCDprint2
0000             35            public _LCDprint
0000             36            public _LCD_4BIT
0000             37            public _WriteCommand
0000             38            public _WriteData
0000             39            public _LCD_byte
0000             40            public _LCD_pulse
0000             41            public _waitms
0000             42            public _Timer3us
0000             43            public _InitADC
0000             44            public __c51_external_startup
0000             45            public _LCDprint2_PARM_3
0000             46            public _LCDprint_PARM_3
0000             47            public _getsn_PARM_2
0000             48            public _LCDprint2_PARM_2
0000             49            public _LCDprint_PARM_2
0000             50            public _overflow_count
0000             51            public _GET_ADC
0000             52   ;--------------------------------------------------------
0000             53   ; Special Function Registers
0000             54   ;--------------------------------------------------------
0000             55   _ACC            DATA 0xe0
0000             56   _ADC0ASAH       DATA 0xb6
0000             57   _ADC0ASAL       DATA 0xb5
0000             58   _ADC0ASCF       DATA 0xa1
0000             59   _ADC0ASCT       DATA 0xc7
0000             60   _ADC0CF0        DATA 0xbc
0000             61   _ADC0CF1        DATA 0xb9
0000             62   _ADC0CF2        DATA 0xdf
0000             63   _ADC0CN0        DATA 0xe8
0000             64   _ADC0CN1        DATA 0xb2
0000             65   _ADC0CN2        DATA 0xb3
0000             66   _ADC0GTH        DATA 0xc4
0000             67   _ADC0GTL        DATA 0xc3
0000             68   _ADC0H          DATA 0xbe
0000             69   _ADC0L          DATA 0xbd
0000             70   _ADC0LTH        DATA 0xc6
0000             71   _ADC0LTL        DATA 0xc5
0000             72   _ADC0MX         DATA 0xbb
0000             73   _B              DATA 0xf0
0000             74   _CKCON0         DATA 0x8e
0000             75   _CKCON1         DATA 0xa6
0000             76   _CLEN0          DATA 0xc6
0000             77   _CLIE0          DATA 0xc7
0000             78   _CLIF0          DATA 0xe8
0000             79   _CLKSEL         DATA 0xa9
0000             80   _CLOUT0         DATA 0xd1
0000             81   _CLU0CF         DATA 0xb1
0000             82   _CLU0FN         DATA 0xaf
0000             83   _CLU0MX         DATA 0x84
0000             84   _CLU1CF         DATA 0xb3
0000             85   _CLU1FN         DATA 0xb2
0000             86   _CLU1MX         DATA 0x85
0000             87   _CLU2CF         DATA 0xb6
0000             88   _CLU2FN         DATA 0xb5
0000             89   _CLU2MX         DATA 0x91
0000             90   _CLU3CF         DATA 0xbf
0000             91   _CLU3FN         DATA 0xbe
0000             92   _CLU3MX         DATA 0xae
0000             93   _CMP0CN0        DATA 0x9b
0000             94   _CMP0CN1        DATA 0x99
0000             95   _CMP0MD         DATA 0x9d
0000             96   _CMP0MX         DATA 0x9f
0000             97   _CMP1CN0        DATA 0xbf
0000             98   _CMP1CN1        DATA 0xac
0000             99   _CMP1MD         DATA 0xab
0000            100   _CMP1MX         DATA 0xaa
0000            101   _CRC0CN0        DATA 0xce
0000            102   _CRC0CN1        DATA 0x86
0000            103   _CRC0CNT        DATA 0xd3
0000            104   _CRC0DAT        DATA 0xcb
0000            105   _CRC0FLIP       DATA 0xcf
0000            106   _CRC0IN         DATA 0xca
0000            107   _CRC0ST         DATA 0xd2
0000            108   _DAC0CF0        DATA 0x91
0000            109   _DAC0CF1        DATA 0x92
0000            110   _DAC0H          DATA 0x85
0000            111   _DAC0L          DATA 0x84
0000            112   _DAC1CF0        DATA 0x93
0000            113   _DAC1CF1        DATA 0x94
0000            114   _DAC1H          DATA 0x8a
0000            115   _DAC1L          DATA 0x89
0000            116   _DAC2CF0        DATA 0x95
0000            117   _DAC2CF1        DATA 0x96
0000            118   _DAC2H          DATA 0x8c
0000            119   _DAC2L          DATA 0x8b
0000            120   _DAC3CF0        DATA 0x9a
0000            121   _DAC3CF1        DATA 0x9c
0000            122   _DAC3H          DATA 0x8e
0000            123   _DAC3L          DATA 0x8d
0000            124   _DACGCF0        DATA 0x88
0000            125   _DACGCF1        DATA 0x98
0000            126   _DACGCF2        DATA 0xa2
0000            127   _DERIVID        DATA 0xad
0000            128   _DEVICEID       DATA 0xb5
0000            129   _DPH            DATA 0x83
0000            130   _DPL            DATA 0x82
0000            131   _EIE1           DATA 0xe6
0000            132   _EIE2           DATA 0xf3
0000            133   _EIP1           DATA 0xbb
0000            134   _EIP1H          DATA 0xee
0000            135   _EIP2           DATA 0xed
0000            136   _EIP2H          DATA 0xf6
0000            137   _EMI0CN         DATA 0xe7
0000            138   _FLKEY          DATA 0xb7
0000            139   _HFO0CAL        DATA 0xc7
0000            140   _HFO1CAL        DATA 0xd6
0000            141   _HFOCN          DATA 0xef
0000            142   _I2C0ADM        DATA 0xff
0000            143   _I2C0CN0        DATA 0xba
0000            144   _I2C0DIN        DATA 0xbc
0000            145   _I2C0DOUT       DATA 0xbb
0000            146   _I2C0FCN0       DATA 0xad
0000            147   _I2C0FCN1       DATA 0xab
0000            148   _I2C0FCT        DATA 0xf5
0000            149   _I2C0SLAD       DATA 0xbd
0000            150   _I2C0STAT       DATA 0xb9
0000            151   _IE             DATA 0xa8
0000            152   _IP             DATA 0xb8
0000            153   _IPH            DATA 0xf2
0000            154   _IT01CF         DATA 0xe4
0000            155   _LFO0CN         DATA 0xb1
0000            156   _P0             DATA 0x80
0000            157   _P0MASK         DATA 0xfe
0000            158   _P0MAT          DATA 0xfd
0000            159   _P0MDIN         DATA 0xf1
0000            160   _P0MDOUT        DATA 0xa4
0000            161   _P0SKIP         DATA 0xd4
0000            162   _P1             DATA 0x90
0000            163   _P1MASK         DATA 0xee
0000            164   _P1MAT          DATA 0xed
0000            165   _P1MDIN         DATA 0xf2
0000            166   _P1MDOUT        DATA 0xa5
0000            167   _P1SKIP         DATA 0xd5
0000            168   _P2             DATA 0xa0
0000            169   _P2MASK         DATA 0xfc
0000            170   _P2MAT          DATA 0xfb
0000            171   _P2MDIN         DATA 0xf3
0000            172   _P2MDOUT        DATA 0xa6
0000            173   _P2SKIP         DATA 0xcc
0000            174   _P3             DATA 0xb0
0000            175   _P3MDIN         DATA 0xf4
0000            176   _P3MDOUT        DATA 0x9c
0000            177   _PCA0CENT       DATA 0x9e
0000            178   _PCA0CLR        DATA 0x9c
0000            179   _PCA0CN0        DATA 0xd8
0000            180   _PCA0CPH0       DATA 0xfc
0000            181   _PCA0CPH1       DATA 0xea
0000            182   _PCA0CPH2       DATA 0xec
0000            183   _PCA0CPH3       DATA 0xf5
0000            184   _PCA0CPH4       DATA 0x85
0000            185   _PCA0CPH5       DATA 0xde
0000            186   _PCA0CPL0       DATA 0xfb
0000            187   _PCA0CPL1       DATA 0xe9
0000            188   _PCA0CPL2       DATA 0xeb
0000            189   _PCA0CPL3       DATA 0xf4
0000            190   _PCA0CPL4       DATA 0x84
0000            191   _PCA0CPL5       DATA 0xdd
0000            192   _PCA0CPM0       DATA 0xda
0000            193   _PCA0CPM1       DATA 0xdb
0000            194   _PCA0CPM2       DATA 0xdc
0000            195   _PCA0CPM3       DATA 0xae
0000            196   _PCA0CPM4       DATA 0xaf
0000            197   _PCA0CPM5       DATA 0xcc
0000            198   _PCA0H          DATA 0xfa
0000            199   _PCA0L          DATA 0xf9
0000            200   _PCA0MD         DATA 0xd9
0000            201   _PCA0POL        DATA 0x96
0000            202   _PCA0PWM        DATA 0xf7
0000            203   _PCON0          DATA 0x87
0000            204   _PCON1          DATA 0xcd
0000            205   _PFE0CN         DATA 0xc1
0000            206   _PRTDRV         DATA 0xf6
0000            207   _PSCTL          DATA 0x8f
0000            208   _PSTAT0         DATA 0xaa
0000            209   _PSW            DATA 0xd0
0000            210   _REF0CN         DATA 0xd1
0000            211   _REG0CN         DATA 0xc9
0000            212   _REVID          DATA 0xb6
0000            213   _RSTSRC         DATA 0xef
0000            214   _SBCON1         DATA 0x94
0000            215   _SBRLH1         DATA 0x96
0000            216   _SBRLL1         DATA 0x95
0000            217   _SBUF           DATA 0x99
0000            218   _SBUF0          DATA 0x99
0000            219   _SBUF1          DATA 0x92
0000            220   _SCON           DATA 0x98
0000            221   _SCON0          DATA 0x98
0000            222   _SCON1          DATA 0xc8
0000            223   _SFRPAGE        DATA 0xa7
0000            224   _SFRPGCN        DATA 0xbc
0000            225   _SFRSTACK       DATA 0xd7
0000            226   _SMB0ADM        DATA 0xd6
0000            227   _SMB0ADR        DATA 0xd7
0000            228   _SMB0CF         DATA 0xc1
0000            229   _SMB0CN0        DATA 0xc0
0000            230   _SMB0DAT        DATA 0xc2
0000            231   _SMB0FCN0       DATA 0xc3
0000            232   _SMB0FCN1       DATA 0xc4
0000            233   _SMB0FCT        DATA 0xef
0000            234   _SMB0RXLN       DATA 0xc5
0000            235   _SMB0TC         DATA 0xac
0000            236   _SMOD1          DATA 0x93
0000            237   _SP             DATA 0x81
0000            238   _SPI0CFG        DATA 0xa1
0000            239   _SPI0CKR        DATA 0xa2
0000            240   _SPI0CN0        DATA 0xf8
0000            241   _SPI0DAT        DATA 0xa3
0000            242   _SPI0FCN0       DATA 0x9a
0000            243   _SPI0FCN1       DATA 0x9b
0000            244   _SPI0FCT        DATA 0xf7
0000            245   _SPI0PCF        DATA 0xdf
0000            246   _TCON           DATA 0x88
0000            247   _TH0            DATA 0x8c
0000            248   _TH1            DATA 0x8d
0000            249   _TL0            DATA 0x8a
0000            250   _TL1            DATA 0x8b
0000            251   _TMOD           DATA 0x89
0000            252   _TMR2CN0        DATA 0xc8
0000            253   _TMR2CN1        DATA 0xfd
0000            254   _TMR2H          DATA 0xcf
0000            255   _TMR2L          DATA 0xce
0000            256   _TMR2RLH        DATA 0xcb
0000            257   _TMR2RLL        DATA 0xca
0000            258   _TMR3CN0        DATA 0x91
0000            259   _TMR3CN1        DATA 0xfe
0000            260   _TMR3H          DATA 0x95
0000            261   _TMR3L          DATA 0x94
0000            262   _TMR3RLH        DATA 0x93
0000            263   _TMR3RLL        DATA 0x92
0000            264   _TMR4CN0        DATA 0x98
0000            265   _TMR4CN1        DATA 0xff
0000            266   _TMR4H          DATA 0xa5
0000            267   _TMR4L          DATA 0xa4
0000            268   _TMR4RLH        DATA 0xa3
0000            269   _TMR4RLL        DATA 0xa2
0000            270   _TMR5CN0        DATA 0xc0
0000            271   _TMR5CN1        DATA 0xf1
0000            272   _TMR5H          DATA 0xd5
0000            273   _TMR5L          DATA 0xd4
0000            274   _TMR5RLH        DATA 0xd3
0000            275   _TMR5RLL        DATA 0xd2
0000            276   _UART0PCF       DATA 0xd9
0000            277   _UART1FCN0      DATA 0x9d
0000            278   _UART1FCN1      DATA 0xd8
0000            279   _UART1FCT       DATA 0xfa
0000            280   _UART1LIN       DATA 0x9e
0000            281   _UART1PCF       DATA 0xda
0000            282   _VDM0CN         DATA 0xff
0000            283   _WDTCN          DATA 0x97
0000            284   _XBR0           DATA 0xe1
0000            285   _XBR1           DATA 0xe2
0000            286   _XBR2           DATA 0xe3
0000            287   _XOSC0CN        DATA 0x86
0000            288   _DPTR           DATA 0x8382
0000            289   _TMR2RL         DATA 0xcbca
0000            290   _TMR3RL         DATA 0x9392
0000            291   _TMR4RL         DATA 0xa3a2
0000            292   _TMR5RL         DATA 0xd3d2
0000            293   _TMR0           DATA 0x8c8a
0000            294   _TMR1           DATA 0x8d8b
0000            295   _TMR2           DATA 0xcfce
0000            296   _TMR3           DATA 0x9594
0000            297   _TMR4           DATA 0xa5a4
0000            298   _TMR5           DATA 0xd5d4
0000            299   _SBRL1          DATA 0x9695
0000            300   _PCA0           DATA 0xfaf9
0000            301   _PCA0CP0        DATA 0xfcfb
0000            302   _PCA0CP1        DATA 0xeae9
0000            303   _PCA0CP2        DATA 0xeceb
0000            304   _PCA0CP3        DATA 0xf5f4
0000            305   _PCA0CP4        DATA 0x8584
0000            306   _PCA0CP5        DATA 0xdedd
0000            307   _ADC0ASA        DATA 0xb6b5
0000            308   _ADC0GT         DATA 0xc4c3
0000            309   _ADC0           DATA 0xbebd
0000            310   _ADC0LT         DATA 0xc6c5
0000            311   _DAC0           DATA 0x8584
0000            312   _DAC1           DATA 0x8a89
0000            313   _DAC2           DATA 0x8c8b
0000            314   _DAC3           DATA 0x8e8d
0000            315   ;--------------------------------------------------------
0000            316   ; special function bits
0000            317   ;--------------------------------------------------------
0000            318   _ACC_0          BIT 0xe0
0000            319   _ACC_1          BIT 0xe1
0000            320   _ACC_2          BIT 0xe2
0000            321   _ACC_3          BIT 0xe3
0000            322   _ACC_4          BIT 0xe4
0000            323   _ACC_5          BIT 0xe5
0000            324   _ACC_6          BIT 0xe6
0000            325   _ACC_7          BIT 0xe7
0000            326   _TEMPE          BIT 0xe8
0000            327   _ADGN0          BIT 0xe9
0000            328   _ADGN1          BIT 0xea
0000            329   _ADWINT         BIT 0xeb
0000            330   _ADBUSY         BIT 0xec
0000            331   _ADINT          BIT 0xed
0000            332   _IPOEN          BIT 0xee
0000            333   _ADEN           BIT 0xef
0000            334   _B_0            BIT 0xf0
0000            335   _B_1            BIT 0xf1
0000            336   _B_2            BIT 0xf2
0000            337   _B_3            BIT 0xf3
0000            338   _B_4            BIT 0xf4
0000            339   _B_5            BIT 0xf5
0000            340   _B_6            BIT 0xf6
0000            341   _B_7            BIT 0xf7
0000            342   _C0FIF          BIT 0xe8
0000            343   _C0RIF          BIT 0xe9
0000            344   _C1FIF          BIT 0xea
0000            345   _C1RIF          BIT 0xeb
0000            346   _C2FIF          BIT 0xec
0000            347   _C2RIF          BIT 0xed
0000            348   _C3FIF          BIT 0xee
0000            349   _C3RIF          BIT 0xef
0000            350   _D1SRC0         BIT 0x88
0000            351   _D1SRC1         BIT 0x89
0000            352   _D1AMEN         BIT 0x8a
0000            353   _D01REFSL       BIT 0x8b
0000            354   _D3SRC0         BIT 0x8c
0000            355   _D3SRC1         BIT 0x8d
0000            356   _D3AMEN         BIT 0x8e
0000            357   _D23REFSL       BIT 0x8f
0000            358   _D0UDIS         BIT 0x98
0000            359   _D1UDIS         BIT 0x99
0000            360   _D2UDIS         BIT 0x9a
0000            361   _D3UDIS         BIT 0x9b
0000            362   _EX0            BIT 0xa8
0000            363   _ET0            BIT 0xa9
0000            364   _EX1            BIT 0xaa
0000            365   _ET1            BIT 0xab
0000            366   _ES0            BIT 0xac
0000            367   _ET2            BIT 0xad
0000            368   _ESPI0          BIT 0xae
0000            369   _EA             BIT 0xaf
0000            370   _PX0            BIT 0xb8
0000            371   _PT0            BIT 0xb9
0000            372   _PX1            BIT 0xba
0000            373   _PT1            BIT 0xbb
0000            374   _PS0            BIT 0xbc
0000            375   _PT2            BIT 0xbd
0000            376   _PSPI0          BIT 0xbe
0000            377   _P0_0           BIT 0x80
0000            378   _P0_1           BIT 0x81
0000            379   _P0_2           BIT 0x82
0000            380   _P0_3           BIT 0x83
0000            381   _P0_4           BIT 0x84
0000            382   _P0_5           BIT 0x85
0000            383   _P0_6           BIT 0x86
0000            384   _P0_7           BIT 0x87
0000            385   _P1_0           BIT 0x90
0000            386   _P1_1           BIT 0x91
0000            387   _P1_2           BIT 0x92
0000            388   _P1_3           BIT 0x93
0000            389   _P1_4           BIT 0x94
0000            390   _P1_5           BIT 0x95
0000            391   _P1_6           BIT 0x96
0000            392   _P1_7           BIT 0x97
0000            393   _P2_0           BIT 0xa0
0000            394   _P2_1           BIT 0xa1
0000            395   _P2_2           BIT 0xa2
0000            396   _P2_3           BIT 0xa3
0000            397   _P2_4           BIT 0xa4
0000            398   _P2_5           BIT 0xa5
0000            399   _P2_6           BIT 0xa6
0000            400   _P3_0           BIT 0xb0
0000            401   _P3_1           BIT 0xb1
0000            402   _P3_2           BIT 0xb2
0000            403   _P3_3           BIT 0xb3
0000            404   _P3_4           BIT 0xb4
0000            405   _P3_7           BIT 0xb7
0000            406   _CCF0           BIT 0xd8
0000            407   _CCF1           BIT 0xd9
0000            408   _CCF2           BIT 0xda
0000            409   _CCF3           BIT 0xdb
0000            410   _CCF4           BIT 0xdc
0000            411   _CCF5           BIT 0xdd
0000            412   _CR             BIT 0xde
0000            413   _CF             BIT 0xdf
0000            414   _PARITY         BIT 0xd0
0000            415   _F1             BIT 0xd1
0000            416   _OV             BIT 0xd2
0000            417   _RS0            BIT 0xd3
0000            418   _RS1            BIT 0xd4
0000            419   _F0             BIT 0xd5
0000            420   _AC             BIT 0xd6
0000            421   _CY             BIT 0xd7
0000            422   _RI             BIT 0x98
0000            423   _TI             BIT 0x99
0000            424   _RB8            BIT 0x9a
0000            425   _TB8            BIT 0x9b
0000            426   _REN            BIT 0x9c
0000            427   _CE             BIT 0x9d
0000            428   _SMODE          BIT 0x9e
0000            429   _RI1            BIT 0xc8
0000            430   _TI1            BIT 0xc9
0000            431   _RBX1           BIT 0xca
0000            432   _TBX1           BIT 0xcb
0000            433   _REN1           BIT 0xcc
0000            434   _PERR1          BIT 0xcd
0000            435   _OVR1           BIT 0xce
0000            436   _SI             BIT 0xc0
0000            437   _ACK            BIT 0xc1
0000            438   _ARBLOST        BIT 0xc2
0000            439   _ACKRQ          BIT 0xc3
0000            440   _STO            BIT 0xc4
0000            441   _STA            BIT 0xc5
0000            442   _TXMODE         BIT 0xc6
0000            443   _MASTER         BIT 0xc7
0000            444   _SPIEN          BIT 0xf8
0000            445   _TXNF           BIT 0xf9
0000            446   _NSSMD0         BIT 0xfa
0000            447   _NSSMD1         BIT 0xfb
0000            448   _RXOVRN         BIT 0xfc
0000            449   _MODF           BIT 0xfd
0000            450   _WCOL           BIT 0xfe
0000            451   _SPIF           BIT 0xff
0000            452   _IT0            BIT 0x88
0000            453   _IE0            BIT 0x89
0000            454   _IT1            BIT 0x8a
0000            455   _IE1            BIT 0x8b
0000            456   _TR0            BIT 0x8c
0000            457   _TF0            BIT 0x8d
0000            458   _TR1            BIT 0x8e
0000            459   _TF1            BIT 0x8f
0000            460   _T2XCLK0        BIT 0xc8
0000            461   _T2XCLK1        BIT 0xc9
0000            462   _TR2            BIT 0xca
0000            463   _T2SPLIT        BIT 0xcb
0000            464   _TF2CEN         BIT 0xcc
0000            465   _TF2LEN         BIT 0xcd
0000            466   _TF2L           BIT 0xce
0000            467   _TF2H           BIT 0xcf
0000            468   _T4XCLK0        BIT 0x98
0000            469   _T4XCLK1        BIT 0x99
0000            470   _TR4            BIT 0x9a
0000            471   _T4SPLIT        BIT 0x9b
0000            472   _TF4CEN         BIT 0x9c
0000            473   _TF4LEN         BIT 0x9d
0000            474   _TF4L           BIT 0x9e
0000            475   _TF4H           BIT 0x9f
0000            476   _T5XCLK0        BIT 0xc0
0000            477   _T5XCLK1        BIT 0xc1
0000            478   _TR5            BIT 0xc2
0000            479   _T5SPLIT        BIT 0xc3
0000            480   _TF5CEN         BIT 0xc4
0000            481   _TF5LEN         BIT 0xc5
0000            482   _TF5L           BIT 0xc6
0000            483   _TF5H           BIT 0xc7
0000            484   _RIE            BIT 0xd8
0000            485   _RXTO0          BIT 0xd9
0000            486   _RXTO1          BIT 0xda
0000            487   _RFRQ           BIT 0xdb
0000            488   _TIE            BIT 0xdc
0000            489   _TXHOLD         BIT 0xdd
0000            490   _TXNF1          BIT 0xde
0000            491   _TFRQ           BIT 0xdf
0000            492   ;--------------------------------------------------------
0000            493   ; overlayable register banks
0000            494   ;--------------------------------------------------------
0000            495            rbank0 segment data overlay
0000            496   ;--------------------------------------------------------
0000            497   ; internal ram data
0000            498   ;--------------------------------------------------------
0000            499            rseg R_DSEG
0000            500   _overflow_count:
0000            501            ds 1
0001            502   _LCDprint_PARM_2:
0001            503            ds 1
0002            504   _LCDprint2_PARM_2:
0002            505            ds 1
0003            506   _getsn_PARM_2:
0003            507            ds 2
0005            508   _getsn_buff_1_88:
0005            509            ds 3
0008            510   _getsn_sloc0_1_0:
0008            511            ds 2
000A            512   _main_period_1_105:
000A            513            ds 4
000E            514   _main_signal_period_1_105:
000E            515            ds 4
0012            516   _main_noise_filter_1_105:
0012            517            ds 4
0016            518   _main_max_distance_1_105:
0016            519            ds 4
001A            520   _main_signal_max_distance_1_105:
001A            521            ds 4
001E            522   _main_signal_peak_value_1_105:
001E            523            ds 4
0022            524   _main_print_signal_peak_1_105:
0022            525            ds 4
0026            526   _main_peak_value_1_105:
0026            527            ds 4
002A            528   _main_print_phase_1_105:
002A            529            ds 4
002E            530   _main_print_measured_frequency_1_105:
002E            531            ds 4
0032            532   _main_print_ref_amplitude_1_105:
0032            533            ds 4
0036            534   _main_print_ref_frequency_1_105:
0036            535            ds 4
003A            536   _main_i_1_105:
003A            537            ds 2
003C            538   ;--------------------------------------------------------
003C            539   ; overlayable items in internal ram 
003C            540   ;--------------------------------------------------------
0000            541            rseg    R_OSEG
0000            542            rseg    R_OSEG
0000            543   _InitPinADC_PARM_2:
0000            544            ds 1
0001            545            rseg    R_OSEG
0001            546   ;--------------------------------------------------------
0001            547   ; indirectly addressable internal ram data
0001            548   ;--------------------------------------------------------
0000            549            rseg R_ISEG
0000            550   ;--------------------------------------------------------
0000            551   ; absolute internal ram data
0000            552   ;--------------------------------------------------------
0000            553            DSEG
0000            554   ;--------------------------------------------------------
0000            555   ; bit data
0000            556   ;--------------------------------------------------------
0000            557            rseg R_BSEG
0000            558   _LCDprint_PARM_3:
0000            559            DBIT    1
0001            560   _LCDprint2_PARM_3:
0001            561            DBIT    1
0002            562   ;--------------------------------------------------------
0002            563   ; paged external ram data
0002            564   ;--------------------------------------------------------
0000            565            rseg R_PSEG
0000            566   ;--------------------------------------------------------
0000            567   ; external ram data
0000            568   ;--------------------------------------------------------
0000            569            rseg R_XSEG
0000            570   _main_buffer1_1_105:
0000            571            ds 16
0010            572   ;--------------------------------------------------------
0010            573   ; absolute external ram data
0010            574   ;--------------------------------------------------------
0000            575            XSEG
0000            576   ;--------------------------------------------------------
0000            577   ; external initialized ram data
0000            578   ;--------------------------------------------------------
0000            579            rseg R_IXSEG
0000            580            rseg R_HOME
0000            581            rseg R_GSINIT
0000            582            rseg R_CSEG
0000            583   ;--------------------------------------------------------
0000            584   ; Reset entry point and interrupt vectors
0000            585   ;--------------------------------------------------------
0000            586            CSEG at 0x0000
0000 020000     587            ljmp    _crt0
0003            588   ;--------------------------------------------------------
0003            589   ; global & static initialisations
0003            590   ;--------------------------------------------------------
0000            591            rseg R_HOME
0000            592            rseg R_GSINIT
0000            593            rseg R_GSINIT
0000            594   ;--------------------------------------------------------
0000            595   ; data variables initialization
0000            596   ;--------------------------------------------------------
0000            597            rseg R_DINIT
0000            598   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:28: unsigned char overflow_count = 0; // Change was made to overflow_count, and is now global
0000 75E800     599            mov     _overflow_count,#0x00
0003            600            ; The linker places a 'ret' at the end of segment R_DINIT.
0003            601   ;--------------------------------------------------------
0003            602   ; code
0003            603   ;--------------------------------------------------------
0000            604            rseg R_CSEG
0000            605   ;------------------------------------------------------------
0000            606   ;Allocation info for local variables in function '_c51_external_startup'
0000            607   ;------------------------------------------------------------
0000            608   ;------------------------------------------------------------
0000            609   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:36: char _c51_external_startup (void)
0000            610   ;        -----------------------------------------
0000            611   ;         function _c51_external_startup
0000            612   ;        -----------------------------------------
0000            613   __c51_external_startup:
0000            614            using   0
0000            615   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:39: SFRPAGE = 0x00;
0000 75A700     616            mov     _SFRPAGE,#0x00
0003            617   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:40: WDTCN = 0xDE; //First key
0003 7597DE     618            mov     _WDTCN,#0xDE
0006            619   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:41: WDTCN = 0xAD; //4Second key
0006 7597AD     620            mov     _WDTCN,#0xAD
0009            621   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:43: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     622            mov     _VDM0CN,#0x80
000C            623   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:44: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     624            mov     _RSTSRC,#0x06
000F            625   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:51: SFRPAGE = 0x10;
000F 75A710     626            mov     _SFRPAGE,#0x10
0012            627   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:52: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     628            mov     _PFE0CN,#0x20
0015            629   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:53: SFRPAGE = 0x00;
0015 75A700     630            mov     _SFRPAGE,#0x00
0018            631   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:74: CLKSEL = 0x00;
0018 75A900     632            mov     _CLKSEL,#0x00
001B            633   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:75: CLKSEL = 0x00;
001B 75A900     634            mov     _CLKSEL,#0x00
001E            635   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:76: while ((CLKSEL & 0x80) == 0);
001E            636   L002001?:
001E E5A9       637            mov     a,_CLKSEL
0020 30E768     638            jnb     acc.7,L002001?
0023            639   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:77: CLKSEL = 0x03;
0023 75A903     640            mov     _CLKSEL,#0x03
0026            641   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:78: CLKSEL = 0x03;
0026 75A903     642            mov     _CLKSEL,#0x03
0029            643   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:79: while ((CLKSEL & 0x80) == 0);
0029            644   L002004?:
0029 E5A9       645            mov     a,_CLKSEL
002B 30E7E8     646            jnb     acc.7,L002004?
002E            647   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:84: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     648            orl     _P0MDOUT,#0x10
0031            649   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:85: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     650            mov     _XBR0,#0x01
0034            651   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:86: XBR1     = 0X00;
0034 75E200     652            mov     _XBR1,#0x00
0037            653   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:87: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     654            mov     _XBR2,#0x40
003A            655   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:93: SCON0 = 0x10;
003A 759810     656            mov     _SCON0,#0x10
003D            657   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:94: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     658            mov     _TH1,#0xE6
0040            659   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:95: TL1 = TH1;      // Init Timer1
0040 858D8B     660            mov     _TL1,_TH1
0043            661   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:96: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     662            anl     _TMOD,#0x0F
0046            663   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:97: TMOD |=  0x20;                       
0046 438920     664            orl     _TMOD,#0x20
0049            665   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:98: TR1 = 1; // START Timer1
0049 D28E       666            setb    _TR1
004B            667   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:99: TI = 1;  // Indicate TX0 ready
004B D299       668            setb    _TI
004D            669   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:101: return 0;
004D 758200     670            mov     dpl,#0x00
0050 22         671            ret
0051            672   ;------------------------------------------------------------
0051            673   ;Allocation info for local variables in function 'InitADC'
0051            674   ;------------------------------------------------------------
0051            675   ;------------------------------------------------------------
0051            676   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:104: void InitADC (void)
0051            677   ;        -----------------------------------------
0051            678   ;         function InitADC
0051            679   ;        -----------------------------------------
0051            680   _InitADC:
0051            681   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:106: SFRPAGE = 0x00;
0051 75A700     682            mov     _SFRPAGE,#0x00
0054            683   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:107: ADEN=0; // Disable ADC
0054 C2EF       684            clr     _ADEN
0056            685   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:112: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0056 75B280     686            mov     _ADC0CN1,#0x80
0059            687   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:116: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
0059 75BC20     688            mov     _ADC0CF0,#0x20
005C            689   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:120: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005C 75B91E     690            mov     _ADC0CF1,#0x1E
005F            691   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:129: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
005F 75E800     692            mov     _ADC0CN0,#0x00
0062            693   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:134: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0062 75DF3F     694            mov     _ADC0CF2,#0x3F
0065            695   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:138: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0065 75B300     696            mov     _ADC0CN2,#0x00
0068            697   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:140: ADEN=1; // Enable ADC
0068 D2EF       698            setb    _ADEN
006A 22         699            ret
006B            700   ;------------------------------------------------------------
006B            701   ;Allocation info for local variables in function 'Timer3us'
006B            702   ;------------------------------------------------------------
006B            703   ;us                        Allocated to registers r2 
006B            704   ;i                         Allocated to registers r3 
006B            705   ;------------------------------------------------------------
006B            706   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:144: void Timer3us(unsigned char us)
006B            707   ;        -----------------------------------------
006B            708   ;         function Timer3us
006B            709   ;        -----------------------------------------
006B            710   _Timer3us:
006B AA82       711            mov     r2,dpl
006D            712   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:149: CKCON0|=0b_0100_0000;
006D 438E40     713            orl     _CKCON0,#0x40
0070            714   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:151: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0070 7592B8     715            mov     _TMR3RL,#0xB8
0073 7593FF     716            mov     (_TMR3RL >> 8),#0xFF
0076            717   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:152: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0076 859294     718            mov     _TMR3,_TMR3RL
0079 859395     719            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007C            720   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:154: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007C 759104     721            mov     _TMR3CN0,#0x04
007F            722   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:155: for (i = 0; i < us; i++)       // Count <us> overflows
007F 7B00       723            mov     r3,#0x00
0081            724   L004004?:
0081 C3         725            clr     c
0082 EB         726            mov     a,r3
0083 9A         727            subb    a,r2
0084 5000       728            jnc     L004007?
0086            729   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:157: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0086            730   L004001?:
0086 E591       731            mov     a,_TMR3CN0
0088 30E7E8     732            jnb     acc.7,L004001?
008B            733   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:158: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008B 53917F     734            anl     _TMR3CN0,#0x7F
008E            735   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:155: for (i = 0; i < us; i++)       // Count <us> overflows
008E 0B         736            inc     r3
008F 8000       737            sjmp    L004004?
0091            738   L004007?:
0091            739   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:160: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0091 759100     740            mov     _TMR3CN0,#0x00
0094 22         741            ret
0095            742   ;------------------------------------------------------------
0095            743   ;Allocation info for local variables in function 'waitms'
0095            744   ;------------------------------------------------------------
0095            745   ;ms                        Allocated to registers r2 r3 
0095            746   ;j                         Allocated to registers r4 r5 
0095            747   ;k                         Allocated to registers r6 
0095            748   ;------------------------------------------------------------
0095            749   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:163: void waitms (unsigned int ms)
0095            750   ;        -----------------------------------------
0095            751   ;         function waitms
0095            752   ;        -----------------------------------------
0095            753   _waitms:
0095 AA82       754            mov     r2,dpl
0097 AB83       755            mov     r3,dph
0099            756   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:167: for(j=0; j<ms; j++)
0099 7C00       757            mov     r4,#0x00
009B 7D00       758            mov     r5,#0x00
009D            759   L005005?:
009D C3         760            clr     c
009E EC         761            mov     a,r4
009F 9A         762            subb    a,r2
00A0 ED         763            mov     a,r5
00A1 9B         764            subb    a,r3
00A2 5000       765            jnc     L005009?
00A4            766   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:168: for (k=0; k<4; k++) Timer3us(250);
00A4 7E00       767            mov     r6,#0x00
00A6            768   L005001?:
00A6 BE0428     769            cjne    r6,#0x04,L005018?
00A9            770   L005018?:
00A9 5000       771            jnc     L005007?
00AB 7582FA     772            mov     dpl,#0xFA
00AE C002       773            push    ar2
00B0 C003       774            push    ar3
00B2 C004       775            push    ar4
00B4 C005       776            push    ar5
00B6 C006       777            push    ar6
00B8 120000     778            lcall   _Timer3us
00BB D006       779            pop     ar6
00BD D005       780            pop     ar5
00BF D004       781            pop     ar4
00C1 D003       782            pop     ar3
00C3 D002       783            pop     ar2
00C5 0E         784            inc     r6
00C6 8000       785            sjmp    L005001?
00C8            786   L005007?:
00C8            787   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:167: for(j=0; j<ms; j++)
00C8 0C         788            inc     r4
00C9 BC0068     789            cjne    r4,#0x00,L005005?
00CC 0D         790            inc     r5
00CD 8000       791            sjmp    L005005?
00CF            792   L005009?:
00CF 22         793            ret
00D0            794   ;------------------------------------------------------------
00D0            795   ;Allocation info for local variables in function 'LCD_pulse'
00D0            796   ;------------------------------------------------------------
00D0            797   ;------------------------------------------------------------
00D0            798   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:171: void LCD_pulse (void)
00D0            799   ;        -----------------------------------------
00D0            800   ;         function LCD_pulse
00D0            801   ;        -----------------------------------------
00D0            802   _LCD_pulse:
00D0            803   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:173: LCD_E=1;
00D0 D2A0       804            setb    _P2_0
00D2            805   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:174: Timer3us(40);
00D2 758228     806            mov     dpl,#0x28
00D5 120000     807            lcall   _Timer3us
00D8            808   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:175: LCD_E=0;
00D8 C2A0       809            clr     _P2_0
00DA 22         810            ret
00DB            811   ;------------------------------------------------------------
00DB            812   ;Allocation info for local variables in function 'LCD_byte'
00DB            813   ;------------------------------------------------------------
00DB            814   ;x                         Allocated to registers r2 
00DB            815   ;------------------------------------------------------------
00DB            816   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:178: void LCD_byte (unsigned char x)
00DB            817   ;        -----------------------------------------
00DB            818   ;         function LCD_byte
00DB            819   ;        -----------------------------------------
00DB            820   _LCD_byte:
00DB AA82       821            mov     r2,dpl
00DD            822   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:181: ACC=x; //Send high nible
00DD 8AE0       823            mov     _ACC,r2
00DF            824   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:182: LCD_D7=ACC_7;
00DF A2E7       825            mov     c,_ACC_7
00E1 9290       826            mov     _P1_0,c
00E3            827   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:183: LCD_D6=ACC_6;
00E3 A2E6       828            mov     c,_ACC_6
00E5 9291       829            mov     _P1_1,c
00E7            830   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:184: LCD_D5=ACC_5;
00E7 A2E5       831            mov     c,_ACC_5
00E9 9292       832            mov     _P1_2,c
00EB            833   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:185: LCD_D4=ACC_4;
00EB A2E4       834            mov     c,_ACC_4
00ED 9293       835            mov     _P1_3,c
00EF            836   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:186: LCD_pulse();
00EF C002       837            push    ar2
00F1 120000     838            lcall   _LCD_pulse
00F4            839   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:187: Timer3us(40);
00F4 758228     840            mov     dpl,#0x28
00F7 120000     841            lcall   _Timer3us
00FA D002       842            pop     ar2
00FC            843   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:188: ACC=x; //Send low nible
00FC 8AE0       844            mov     _ACC,r2
00FE            845   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:189: LCD_D7=ACC_3;
00FE A2E3       846            mov     c,_ACC_3
0100 9290       847            mov     _P1_0,c
0102            848   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:190: LCD_D6=ACC_2;
0102 A2E2       849            mov     c,_ACC_2
0104 9291       850            mov     _P1_1,c
0106            851   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:191: LCD_D5=ACC_1;
0106 A2E1       852            mov     c,_ACC_1
0108 9292       853            mov     _P1_2,c
010A            854   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:192: LCD_D4=ACC_0;
010A A2E0       855            mov     c,_ACC_0
010C 9293       856            mov     _P1_3,c
010E            857   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:193: LCD_pulse();
010E 020000     858            ljmp    _LCD_pulse
0111            859   ;------------------------------------------------------------
0111            860   ;Allocation info for local variables in function 'WriteData'
0111            861   ;------------------------------------------------------------
0111            862   ;x                         Allocated to registers r2 
0111            863   ;------------------------------------------------------------
0111            864   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:196: void WriteData (unsigned char x)
0111            865   ;        -----------------------------------------
0111            866   ;         function WriteData
0111            867   ;        -----------------------------------------
0111            868   _WriteData:
0111 AA82       869            mov     r2,dpl
0113            870   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:198: LCD_RS=1;
0113 D297       871            setb    _P1_7
0115            872   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:199: LCD_byte(x);
0115 8A82       873            mov     dpl,r2
0117 120000     874            lcall   _LCD_byte
011A            875   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:200: waitms(2);
011A 900002     876            mov     dptr,#0x0002
011D 020000     877            ljmp    _waitms
0120            878   ;------------------------------------------------------------
0120            879   ;Allocation info for local variables in function 'WriteCommand'
0120            880   ;------------------------------------------------------------
0120            881   ;x                         Allocated to registers r2 
0120            882   ;------------------------------------------------------------
0120            883   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:203: void WriteCommand (unsigned char x)
0120            884   ;        -----------------------------------------
0120            885   ;         function WriteCommand
0120            886   ;        -----------------------------------------
0120            887   _WriteCommand:
0120 AA82       888            mov     r2,dpl
0122            889   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:205: LCD_RS=0;
0122 C297       890            clr     _P1_7
0124            891   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:206: LCD_byte(x);
0124 8A82       892            mov     dpl,r2
0126 120000     893            lcall   _LCD_byte
0129            894   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:207: waitms(5);
0129 900005     895            mov     dptr,#0x0005
012C 020000     896            ljmp    _waitms
012F            897   ;------------------------------------------------------------
012F            898   ;Allocation info for local variables in function 'LCD_4BIT'
012F            899   ;------------------------------------------------------------
012F            900   ;------------------------------------------------------------
012F            901   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:210: void LCD_4BIT (void)
012F            902   ;        -----------------------------------------
012F            903   ;         function LCD_4BIT
012F            904   ;        -----------------------------------------
012F            905   _LCD_4BIT:
012F            906   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:212: LCD_E=0; // Resting state of LCD's enable is zero
012F C2A0       907            clr     _P2_0
0131            908   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:214: waitms(20);
0131 900014     909            mov     dptr,#0x0014
0134 120000     910            lcall   _waitms
0137            911   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:216: WriteCommand(0x33);
0137 758233     912            mov     dpl,#0x33
013A 120000     913            lcall   _WriteCommand
013D            914   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:217: WriteCommand(0x33);
013D 758233     915            mov     dpl,#0x33
0140 120000     916            lcall   _WriteCommand
0143            917   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:218: WriteCommand(0x32); // Change to 4-bit mode
0143 758232     918            mov     dpl,#0x32
0146 120000     919            lcall   _WriteCommand
0149            920   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:221: WriteCommand(0x28);
0149 758228     921            mov     dpl,#0x28
014C 120000     922            lcall   _WriteCommand
014F            923   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:222: WriteCommand(0x0c);
014F 75820C     924            mov     dpl,#0x0C
0152 120000     925            lcall   _WriteCommand
0155            926   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:223: WriteCommand(0x01); // Clear screen command (takes some time)
0155 758201     927            mov     dpl,#0x01
0158 120000     928            lcall   _WriteCommand
015B            929   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:224: waitms(20); // Wait for clear screen command to finsih.
015B 900014     930            mov     dptr,#0x0014
015E 020000     931            ljmp    _waitms
0161            932   ;------------------------------------------------------------
0161            933   ;Allocation info for local variables in function 'LCDprint'
0161            934   ;------------------------------------------------------------
0161            935   ;line                      Allocated with name '_LCDprint_PARM_2'
0161            936   ;string                    Allocated to registers r2 r3 r4 
0161            937   ;j                         Allocated to registers r5 r6 
0161            938   ;------------------------------------------------------------
0161            939   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:227: void LCDprint(char * string, unsigned char line, bit clear)
0161            940   ;        -----------------------------------------
0161            941   ;         function LCDprint
0161            942   ;        -----------------------------------------
0161            943   _LCDprint:
0161 AA82       944            mov     r2,dpl
0163 AB83       945            mov     r3,dph
0165 ACF0       946            mov     r4,b
0167            947   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:231: WriteCommand(line==2?0xc0:0x80);
0167 7402       948            mov     a,#0x02
0169 B5A8E8     949            cjne    a,_LCDprint_PARM_2,L011013?
016C 7DC0       950            mov     r5,#0xC0
016E 8000       951            sjmp    L011014?
0170            952   L011013?:
0170 7D80       953            mov     r5,#0x80
0172            954   L011014?:
0172 8D82       955            mov     dpl,r5
0174 C002       956            push    ar2
0176 C003       957            push    ar3
0178 C004       958            push    ar4
017A 120000     959            lcall   _WriteCommand
017D            960   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:232: waitms(5);
017D 900005     961            mov     dptr,#0x0005
0180 120000     962            lcall   _waitms
0183 D004       963            pop     ar4
0185 D003       964            pop     ar3
0187 D002       965            pop     ar2
0189            966   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:233: for(j=0; string[j]!=0; j++)      WriteData(string[j]);// Write the message
0189 7D00       967            mov     r5,#0x00
018B 7E00       968            mov     r6,#0x00
018D            969   L011003?:
018D ED         970            mov     a,r5
018E 2A         971            add     a,r2
018F FF         972            mov     r7,a
0190 EE         973            mov     a,r6
0191 3B         974            addc    a,r3
0192 F8         975            mov     r0,a
0193 8C01       976            mov     ar1,r4
0195 8F82       977            mov     dpl,r7
0197 8883       978            mov     dph,r0
0199 89F0       979            mov     b,r1
019B 120000     980            lcall   __gptrget
019E FF         981            mov     r7,a
019F 6000       982            jz      L011006?
01A1 8F82       983            mov     dpl,r7
01A3 C002       984            push    ar2
01A5 C003       985            push    ar3
01A7 C004       986            push    ar4
01A9 C005       987            push    ar5
01AB C006       988            push    ar6
01AD 120000     989            lcall   _WriteData
01B0 D006       990            pop     ar6
01B2 D005       991            pop     ar5
01B4 D004       992            pop     ar4
01B6 D003       993            pop     ar3
01B8 D002       994            pop     ar2
01BA 0D         995            inc     r5
01BB BD0068     996            cjne    r5,#0x00,L011003?
01BE 0E         997            inc     r6
01BF 8000       998            sjmp    L011003?
01C1            999   L011006?:
01C1           1000   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:234: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
01C1 30C828    1001            jnb     _LCDprint_PARM_3,L011011?
01C4 8D02      1002            mov     ar2,r5
01C6 8E03      1003            mov     ar3,r6
01C8           1004   L011007?:
01C8 C3        1005            clr     c
01C9 EA        1006            mov     a,r2
01CA 9410      1007            subb    a,#0x10
01CC EB        1008            mov     a,r3
01CD 6480      1009            xrl     a,#0x80
01CF 9480      1010            subb    a,#0x80
01D1 5000      1011            jnc     L011011?
01D3 758220    1012            mov     dpl,#0x20
01D6 C002      1013            push    ar2
01D8 C003      1014            push    ar3
01DA 120000    1015            lcall   _WriteData
01DD D003      1016            pop     ar3
01DF D002      1017            pop     ar2
01E1 0A        1018            inc     r2
01E2 BA0068    1019            cjne    r2,#0x00,L011007?
01E5 0B        1020            inc     r3
01E6 8000      1021            sjmp    L011007?
01E8           1022   L011011?:
01E8 22        1023            ret
01E9           1024   ;------------------------------------------------------------
01E9           1025   ;Allocation info for local variables in function 'LCDprint2'
01E9           1026   ;------------------------------------------------------------
01E9           1027   ;line                      Allocated with name '_LCDprint2_PARM_2'
01E9           1028   ;string                    Allocated to registers r2 r3 r4 
01E9           1029   ;j                         Allocated to registers r5 r6 
01E9           1030   ;------------------------------------------------------------
01E9           1031   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:237: void LCDprint2(char * string, unsigned char line, bit clear)
01E9           1032   ;        -----------------------------------------
01E9           1033   ;         function LCDprint2
01E9           1034   ;        -----------------------------------------
01E9           1035   _LCDprint2:
01E9 AA82      1036            mov     r2,dpl
01EB AB83      1037            mov     r3,dph
01ED ACF0      1038            mov     r4,b
01EF           1039   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:241: WriteCommand(line==2?0xc0:0x80);
01EF 7402      1040            mov     a,#0x02
01F1 B558A8    1041            cjne    a,_LCDprint2_PARM_2,L012013?
01F4 7DC0      1042            mov     r5,#0xC0
01F6 8000      1043            sjmp    L012014?
01F8           1044   L012013?:
01F8 7D80      1045            mov     r5,#0x80
01FA           1046   L012014?:
01FA 8D82      1047            mov     dpl,r5
01FC C002      1048            push    ar2
01FE C003      1049            push    ar3
0200 C004      1050            push    ar4
0202 120000    1051            lcall   _WriteCommand
0205           1052   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:242: waitms(5);
0205 900005    1053            mov     dptr,#0x0005
0208 120000    1054            lcall   _waitms
020B D004      1055            pop     ar4
020D D003      1056            pop     ar3
020F D002      1057            pop     ar2
0211           1058   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:243: for(j=0; string[j]!=0; j++)      WriteData(string[j]);// Write the message
0211 7D00      1059            mov     r5,#0x00
0213 7E00      1060            mov     r6,#0x00
0215           1061   L012003?:
0215 ED        1062            mov     a,r5
0216 2A        1063            add     a,r2
0217 FF        1064            mov     r7,a
0218 EE        1065            mov     a,r6
0219 3B        1066            addc    a,r3
021A F8        1067            mov     r0,a
021B 8C01      1068            mov     ar1,r4
021D 8F82      1069            mov     dpl,r7
021F 8883      1070            mov     dph,r0
0221 89F0      1071            mov     b,r1
0223 120000    1072            lcall   __gptrget
0226 FF        1073            mov     r7,a
0227 6000      1074            jz      L012006?
0229 8F82      1075            mov     dpl,r7
022B C002      1076            push    ar2
022D C003      1077            push    ar3
022F C004      1078            push    ar4
0231 C005      1079            push    ar5
0233 C006      1080            push    ar6
0235 120000    1081            lcall   _WriteData
0238 D006      1082            pop     ar6
023A D005      1083            pop     ar5
023C D004      1084            pop     ar4
023E D003      1085            pop     ar3
0240 D002      1086            pop     ar2
0242 0D        1087            inc     r5
0243 BD0028    1088            cjne    r5,#0x00,L012003?
0246 0E        1089            inc     r6
0247 8000      1090            sjmp    L012003?
0249           1091   L012006?:
0249           1092   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:244: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
0249 3078A8    1093            jnb     _LCDprint2_PARM_3,L012011?
024C 8D02      1094            mov     ar2,r5
024E 8E03      1095            mov     ar3,r6
0250           1096   L012007?:
0250 C3        1097            clr     c
0251 EA        1098            mov     a,r2
0252 9410      1099            subb    a,#0x10
0254 EB        1100            mov     a,r3
0255 6480      1101            xrl     a,#0x80
0257 9480      1102            subb    a,#0x80
0259 5000      1103            jnc     L012011?
025B 758220    1104            mov     dpl,#0x20
025E C002      1105            push    ar2
0260 C003      1106            push    ar3
0262 120000    1107            lcall   _WriteData
0265 D003      1108            pop     ar3
0267 D002      1109            pop     ar2
0269 0A        1110            inc     r2
026A BA00E8    1111            cjne    r2,#0x00,L012007?
026D 0B        1112            inc     r3
026E 8000      1113            sjmp    L012007?
0270           1114   L012011?:
0270 22        1115            ret
0271           1116   ;------------------------------------------------------------
0271           1117   ;Allocation info for local variables in function 'getsn'
0271           1118   ;------------------------------------------------------------
0271           1119   ;len                       Allocated with name '_getsn_PARM_2'
0271           1120   ;buff                      Allocated with name '_getsn_buff_1_88'
0271           1121   ;j                         Allocated with name '_getsn_sloc0_1_0'
0271           1122   ;c                         Allocated to registers r3 
0271           1123   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
0271           1124   ;------------------------------------------------------------
0271           1125   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:247: int getsn (char * buff, int len)
0271           1126   ;        -----------------------------------------
0271           1127   ;         function getsn
0271           1128   ;        -----------------------------------------
0271           1129   _getsn:
0271 858238    1130            mov     _getsn_buff_1_88,dpl
0274 858339    1131            mov     (_getsn_buff_1_88 + 1),dph
0277 85F03A    1132            mov     (_getsn_buff_1_88 + 2),b
027A           1133   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:252: for(j=0; j<(len-1); j++)
027A E4        1134            clr     a
027B F588      1135            mov     _getsn_sloc0_1_0,a
027D F589      1136            mov     (_getsn_sloc0_1_0 + 1),a
027F E508      1137            mov     a,_getsn_PARM_2
0281 24FF      1138            add     a,#0xff
0283 FF        1139            mov     r7,a
0284 E509      1140            mov     a,(_getsn_PARM_2 + 1)
0286 34FF      1141            addc    a,#0xff
0288 F8        1142            mov     r0,a
0289 7900      1143            mov     r1,#0x00
028B 7A00      1144            mov     r2,#0x00
028D           1145   L013005?:
028D C3        1146            clr     c
028E E9        1147            mov     a,r1
028F 9F        1148            subb    a,r7
0290 EA        1149            mov     a,r2
0291 6480      1150            xrl     a,#0x80
0293 88F0      1151            mov     b,r0
0295 63F080    1152            xrl     b,#0x80
0298 95F0      1153            subb    a,b
029A 5000      1154            jnc     L013008?
029C           1155   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:254: c=getchar();
029C C002      1156            push    ar2
029E C007      1157            push    ar7
02A0 C000      1158            push    ar0
02A2 C001      1159            push    ar1
02A4 120000    1160            lcall   _getchar
02A7 AB82      1161            mov     r3,dpl
02A9 D001      1162            pop     ar1
02AB D000      1163            pop     ar0
02AD D007      1164            pop     ar7
02AF D002      1165            pop     ar2
02B1           1166   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:255: if ( (c=='\n') || (c=='\r') )
02B1 BB0AE8    1167            cjne    r3,#0x0A,L013015?
02B4 8000      1168            sjmp    L013001?
02B6           1169   L013015?:
02B6 BB0D68    1170            cjne    r3,#0x0D,L013002?
02B9           1171   L013001?:
02B9           1172   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:257: buff[j]=0;
02B9 E588      1173            mov     a,_getsn_sloc0_1_0
02BB 2538      1174            add     a,_getsn_buff_1_88
02BD FC        1175            mov     r4,a
02BE E589      1176            mov     a,(_getsn_sloc0_1_0 + 1)
02C0 3539      1177            addc    a,(_getsn_buff_1_88 + 1)
02C2 FD        1178            mov     r5,a
02C3 AE3A      1179            mov     r6,(_getsn_buff_1_88 + 2)
02C5 8C82      1180            mov     dpl,r4
02C7 8D83      1181            mov     dph,r5
02C9 8EF0      1182            mov     b,r6
02CB E4        1183            clr     a
02CC 120000    1184            lcall   __gptrput
02CF           1185   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:258: return j;
02CF 858882    1186            mov     dpl,_getsn_sloc0_1_0
02D2 858983    1187            mov     dph,(_getsn_sloc0_1_0 + 1)
02D5 22        1188            ret
02D6           1189   L013002?:
02D6           1190   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:262: buff[j]=c;
02D6 E9        1191            mov     a,r1
02D7 2538      1192            add     a,_getsn_buff_1_88
02D9 FC        1193            mov     r4,a
02DA EA        1194            mov     a,r2
02DB 3539      1195            addc    a,(_getsn_buff_1_88 + 1)
02DD FD        1196            mov     r5,a
02DE AE3A      1197            mov     r6,(_getsn_buff_1_88 + 2)
02E0 8C82      1198            mov     dpl,r4
02E2 8D83      1199            mov     dph,r5
02E4 8EF0      1200            mov     b,r6
02E6 EB        1201            mov     a,r3
02E7 120000    1202            lcall   __gptrput
02EA           1203   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:252: for(j=0; j<(len-1); j++)
02EA 09        1204            inc     r1
02EB B900E8    1205            cjne    r1,#0x00,L013018?
02EE 0A        1206            inc     r2
02EF           1207   L013018?:
02EF 8988      1208            mov     _getsn_sloc0_1_0,r1
02F1 8A89      1209            mov     (_getsn_sloc0_1_0 + 1),r2
02F3 8000      1210            sjmp    L013005?
02F5           1211   L013008?:
02F5           1212   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:265: buff[j]=0;
02F5 E588      1213            mov     a,_getsn_sloc0_1_0
02F7 2538      1214            add     a,_getsn_buff_1_88
02F9 FA        1215            mov     r2,a
02FA E589      1216            mov     a,(_getsn_sloc0_1_0 + 1)
02FC 3539      1217            addc    a,(_getsn_buff_1_88 + 1)
02FE FB        1218            mov     r3,a
02FF AC3A      1219            mov     r4,(_getsn_buff_1_88 + 2)
0301 8A82      1220            mov     dpl,r2
0303 8B83      1221            mov     dph,r3
0305 8CF0      1222            mov     b,r4
0307 E4        1223            clr     a
0308 120000    1224            lcall   __gptrput
030B           1225   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:266: return len;
030B 850882    1226            mov     dpl,_getsn_PARM_2
030E 850983    1227            mov     dph,(_getsn_PARM_2 + 1)
0311 22        1228            ret
0312           1229   ;------------------------------------------------------------
0312           1230   ;Allocation info for local variables in function 'InitPinADC'
0312           1231   ;------------------------------------------------------------
0312           1232   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
0312           1233   ;portno                    Allocated to registers r2 
0312           1234   ;mask                      Allocated to registers r3 
0312           1235   ;------------------------------------------------------------
0312           1236   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:270: void InitPinADC (unsigned char portno, unsigned char pinno) {
0312           1237   ;        -----------------------------------------
0312           1238   ;         function InitPinADC
0312           1239   ;        -----------------------------------------
0312           1240   _InitPinADC:
0312 AA82      1241            mov     r2,dpl
0314           1242   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:273: mask=1<<pinno;
0314 85D8F0    1243            mov     b,_InitPinADC_PARM_2
0317 05F0      1244            inc     b
0319 7401      1245            mov     a,#0x01
031B 8000      1246            sjmp    L014013?
031D           1247   L014011?:
031D 25E0      1248            add     a,acc
031F           1249   L014013?:
031F D5F068    1250            djnz    b,L014011?
0322 FB        1251            mov     r3,a
0323           1252   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:275: SFRPAGE = 0x20;
0323 75A720    1253            mov     _SFRPAGE,#0x20
0326           1254   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:276: switch (portno)
0326 BA00A8    1255            cjne    r2,#0x00,L014014?
0329 8000      1256            sjmp    L014001?
032B           1257   L014014?:
032B BA0128    1258            cjne    r2,#0x01,L014015?
032E 8000      1259            sjmp    L014002?
0330           1260   L014015?:
0330           1261   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:278: case 0:
0330 BA02A8    1262            cjne    r2,#0x02,L014005?
0333 8000      1263            sjmp    L014003?
0335           1264   L014001?:
0335           1265   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:279: P0MDIN &= (~mask); // Set pin as analog input
0335 EB        1266            mov     a,r3
0336 F4        1267            cpl     a
0337 FA        1268            mov     r2,a
0338 52F1      1269            anl     _P0MDIN,a
033A           1270   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:280: P0SKIP |= mask; // Skip Crossbar decoding for this pin
033A EB        1271            mov     a,r3
033B 42D4      1272            orl     _P0SKIP,a
033D           1273   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:281: break;
033D           1274   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:282: case 1:
033D 8000      1275            sjmp    L014005?
033F           1276   L014002?:
033F           1277   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:283: P1MDIN &= (~mask); // Set pin as analog input
033F EB        1278            mov     a,r3
0340 F4        1279            cpl     a
0341 FA        1280            mov     r2,a
0342 52F2      1281            anl     _P1MDIN,a
0344           1282   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:284: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0344 EB        1283            mov     a,r3
0345 42D5      1284            orl     _P1SKIP,a
0347           1285   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:285: break;
0347           1286   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:286: case 2:
0347 8000      1287            sjmp    L014005?
0349           1288   L014003?:
0349           1289   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:287: P2MDIN &= (~mask); // Set pin as analog input
0349 EB        1290            mov     a,r3
034A F4        1291            cpl     a
034B FA        1292            mov     r2,a
034C 52F3      1293            anl     _P2MDIN,a
034E           1294   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:288: P2SKIP |= mask; // Skip Crossbar decoding for this pin
034E EB        1295            mov     a,r3
034F 42CC      1296            orl     _P2SKIP,a
0351           1297   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:292: }
0351           1298   L014005?:
0351           1299   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:293: SFRPAGE = 0x00;
0351 75A700    1300            mov     _SFRPAGE,#0x00
0354 22        1301            ret
0355           1302   ;------------------------------------------------------------
0355           1303   ;Allocation info for local variables in function 'ADC_at_Pin'
0355           1304   ;------------------------------------------------------------
0355           1305   ;pin                       Allocated to registers 
0355           1306   ;------------------------------------------------------------
0355           1307   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:296: unsigned int ADC_at_Pin(unsigned char pin) {
0355           1308   ;        -----------------------------------------
0355           1309   ;         function ADC_at_Pin
0355           1310   ;        -----------------------------------------
0355           1311   _ADC_at_Pin:
0355 8582BB    1312            mov     _ADC0MX,dpl
0358           1313   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:298: ADINT = 0;
0358 C2ED      1314            clr     _ADINT
035A           1315   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:299: ADBUSY = 1;     // Convert voltage at the pin
035A D2EC      1316            setb    _ADBUSY
035C           1317   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:300: while (!ADINT); // Wait for conversion to complete
035C           1318   L015001?:
035C 30ED28    1319            jnb     _ADINT,L015001?
035F           1320   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:301: return (ADC0);
035F 85BD82    1321            mov     dpl,_ADC0
0362 85BE83    1322            mov     dph,(_ADC0 >> 8)
0365 22        1323            ret
0366           1324   ;------------------------------------------------------------
0366           1325   ;Allocation info for local variables in function 'Volts_at_Pin'
0366           1326   ;------------------------------------------------------------
0366           1327   ;pin                       Allocated to registers r2 
0366           1328   ;------------------------------------------------------------
0366           1329   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:304: float Volts_at_Pin(unsigned char pin) {
0366           1330   ;        -----------------------------------------
0366           1331   ;         function Volts_at_Pin
0366           1332   ;        -----------------------------------------
0366           1333   _Volts_at_Pin:
0366           1334   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:305: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
0366 120000    1335            lcall   _ADC_at_Pin
0369 120000    1336            lcall   ___uint2fs
036C AA82      1337            mov     r2,dpl
036E AB83      1338            mov     r3,dph
0370 ACF0      1339            mov     r4,b
0372 FD        1340            mov     r5,a
0373 C002      1341            push    ar2
0375 C003      1342            push    ar3
0377 C004      1343            push    ar4
0379 C005      1344            push    ar5
037B 906C8B    1345            mov     dptr,#0x6C8B
037E 75F053    1346            mov     b,#0x53
0381 7440      1347            mov     a,#0x40
0383 120000    1348            lcall   ___fsmul
0386 AA82      1349            mov     r2,dpl
0388 AB83      1350            mov     r3,dph
038A ACF0      1351            mov     r4,b
038C FD        1352            mov     r5,a
038D E581      1353            mov     a,sp
038F 24FC      1354            add     a,#0xfc
0391 F581      1355            mov     sp,a
0393 E4        1356            clr     a
0394 C0E0      1357            push    acc
0396 74FC      1358            mov     a,#0xFC
0398 C0E0      1359            push    acc
039A 747F      1360            mov     a,#0x7F
039C C0E0      1361            push    acc
039E 7446      1362            mov     a,#0x46
03A0 C0E0      1363            push    acc
03A2 8A82      1364            mov     dpl,r2
03A4 8B83      1365            mov     dph,r3
03A6 8CF0      1366            mov     b,r4
03A8 ED        1367            mov     a,r5
03A9 120000    1368            lcall   ___fsdiv
03AC AA82      1369            mov     r2,dpl
03AE AB83      1370            mov     r3,dph
03B0 ACF0      1371            mov     r4,b
03B2 FD        1372            mov     r5,a
03B3 E581      1373            mov     a,sp
03B5 24FC      1374            add     a,#0xfc
03B7 F581      1375            mov     sp,a
03B9 8A82      1376            mov     dpl,r2
03BB 8B83      1377            mov     dph,r3
03BD 8CF0      1378            mov     b,r4
03BF ED        1379            mov     a,r5
03C0 22        1380            ret
03C1           1381   ;------------------------------------------------------------
03C1           1382   ;Allocation info for local variables in function 'GET_ADC'
03C1           1383   ;------------------------------------------------------------
03C1           1384   ;------------------------------------------------------------
03C1           1385   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:309: unsigned int GET_ADC (void) {
03C1           1386   ;        -----------------------------------------
03C1           1387   ;         function GET_ADC
03C1           1388   ;        -----------------------------------------
03C1           1389   _GET_ADC:
03C1           1390   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:310: ADINT = 0;
03C1 C2ED      1391            clr     _ADINT
03C3           1392   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:311: ADBUSY = 1;
03C3 D2EC      1393            setb    _ADBUSY
03C5           1394   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:312: while (!ADINT); // Wait for conversion to complete
03C5           1395   L017001?:
03C5 30ED68    1396            jnb     _ADINT,L017001?
03C8           1397   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:313: return (ADC0);
03C8 85BD82    1398            mov     dpl,_ADC0
03CB 85BE83    1399            mov     dph,(_ADC0 >> 8)
03CE 22        1400            ret
03CF           1401   ;------------------------------------------------------------
03CF           1402   ;Allocation info for local variables in function 'TIMER0_Init'
03CF           1403   ;------------------------------------------------------------
03CF           1404   ;------------------------------------------------------------
03CF           1405   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:316: void TIMER0_Init(void)
03CF           1406   ;        -----------------------------------------
03CF           1407   ;         function TIMER0_Init
03CF           1408   ;        -----------------------------------------
03CF           1409   _TIMER0_Init:
03CF           1410   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:318: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
03CF 5389F0    1411            anl     _TMOD,#0xF0
03D2           1412   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:319: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
03D2 438901    1413            orl     _TMOD,#0x01
03D5           1414   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:320: TR0=0; // Stop Timer/Counter 0
03D5 C28C      1415            clr     _TR0
03D7 22        1416            ret
03D8           1417   ;------------------------------------------------------------
03D8           1418   ;Allocation info for local variables in function 'main'
03D8           1419   ;------------------------------------------------------------
03D8           1420   ;period                    Allocated with name '_main_period_1_105'
03D8           1421   ;signal_period             Allocated with name '_main_signal_period_1_105'
03D8           1422   ;noise_filter              Allocated with name '_main_noise_filter_1_105'
03D8           1423   ;max_distance              Allocated with name '_main_max_distance_1_105'
03D8           1424   ;signal_max_distance       Allocated with name '_main_signal_max_distance_1_105'
03D8           1425   ;signal_peak_value         Allocated with name '_main_signal_peak_value_1_105'
03D8           1426   ;print_signal_peak         Allocated with name '_main_print_signal_peak_1_105'
03D8           1427   ;peak_value                Allocated with name '_main_peak_value_1_105'
03D8           1428   ;period_ref                Allocated to registers 
03D8           1429   ;signal_period_ref         Allocated to registers 
03D8           1430   ;halfperiod_ref            Allocated to registers 
03D8           1431   ;quarter_period            Allocated to registers 
03D8           1432   ;time_diff                 Allocated to registers r2 r3 r4 r5 
03D8           1433   ;phase_diff                Allocated to registers r2 r3 r4 r5 
03D8           1434   ;print_phase               Allocated with name '_main_print_phase_1_105'
03D8           1435   ;temp_volts                Allocated to registers r2 r3 r4 r5 
03D8           1436   ;print_measured_frequency  Allocated with name '_main_print_measured_frequency_1_105'
03D8           1437   ;print_ref_amplitude       Allocated with name '_main_print_ref_amplitude_1_105'
03D8           1438   ;print_ref_frequency       Allocated with name '_main_print_ref_frequency_1_105'
03D8           1439   ;i                         Allocated with name '_main_i_1_105'
03D8           1440   ;buffer1                   Allocated with name '_main_buffer1_1_105'
03D8           1441   ;------------------------------------------------------------
03D8           1442   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:323: void main (void)
03D8           1443   ;        -----------------------------------------
03D8           1444   ;         function main
03D8           1445   ;        -----------------------------------------
03D8           1446   _main:
03D8           1447   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:328: float noise_filter = 0;
03D8 757800    1448            mov     _main_noise_filter_1_105,#0x00
03DB 757900    1449            mov     (_main_noise_filter_1_105 + 1),#0x00
03DE 757A00    1450            mov     (_main_noise_filter_1_105 + 2),#0x00
03E1 757B00    1451            mov     (_main_noise_filter_1_105 + 3),#0x00
03E4           1452   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:329: float max_distance = 0;
03E4 75C800    1453            mov     _main_max_distance_1_105,#0x00
03E7 75C900    1454            mov     (_main_max_distance_1_105 + 1),#0x00
03EA 75CA00    1455            mov     (_main_max_distance_1_105 + 2),#0x00
03ED 75CB00    1456            mov     (_main_max_distance_1_105 + 3),#0x00
03F0           1457   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:330: float signal_max_distance = 0;
03F0 751800    1458            mov     _main_signal_max_distance_1_105,#0x00
03F3 751900    1459            mov     (_main_signal_max_distance_1_105 + 1),#0x00
03F6 751A00    1460            mov     (_main_signal_max_distance_1_105 + 2),#0x00
03F9 751B00    1461            mov     (_main_signal_max_distance_1_105 + 3),#0x00
03FC           1462   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:331: float signal_peak_value = 0;
03FC 756800    1463            mov     _main_signal_peak_value_1_105,#0x00
03FF 756900    1464            mov     (_main_signal_peak_value_1_105 + 1),#0x00
0402 756A00    1465            mov     (_main_signal_peak_value_1_105 + 2),#0x00
0405 756B00    1466            mov     (_main_signal_peak_value_1_105 + 3),#0x00
0408           1467   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:332: float print_signal_peak = 0;
0408 75B800    1468            mov     _main_print_signal_peak_1_105,#0x00
040B 75B900    1469            mov     (_main_print_signal_peak_1_105 + 1),#0x00
040E 75BA00    1470            mov     (_main_print_signal_peak_1_105 + 2),#0x00
0411 75BB00    1471            mov     (_main_print_signal_peak_1_105 + 3),#0x00
0414           1472   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:335: float peak_value = 0;
0414 750800    1473            mov     _main_peak_value_1_105,#0x00
0417 750900    1474            mov     (_main_peak_value_1_105 + 1),#0x00
041A 750A00    1475            mov     (_main_peak_value_1_105 + 2),#0x00
041D 750B00    1476            mov     (_main_peak_value_1_105 + 3),#0x00
0420           1477   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:344: float print_measured_frequency = 0;
0420 75B800    1478            mov     _main_print_measured_frequency_1_105,#0x00
0423 75B900    1479            mov     (_main_print_measured_frequency_1_105 + 1),#0x00
0426 75BA00    1480            mov     (_main_print_measured_frequency_1_105 + 2),#0x00
0429 75BB00    1481            mov     (_main_print_measured_frequency_1_105 + 3),#0x00
042C           1482   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:345: float print_ref_amplitude = 0;
042C 750800    1483            mov     _main_print_ref_amplitude_1_105,#0x00
042F 750900    1484            mov     (_main_print_ref_amplitude_1_105 + 1),#0x00
0432 750A00    1485            mov     (_main_print_ref_amplitude_1_105 + 2),#0x00
0435 750B00    1486            mov     (_main_print_ref_amplitude_1_105 + 3),#0x00
0438           1487   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:346: float print_ref_frequency = 0;
0438 755800    1488            mov     _main_print_ref_frequency_1_105,#0x00
043B 755900    1489            mov     (_main_print_ref_frequency_1_105 + 1),#0x00
043E 755A00    1490            mov     (_main_print_ref_frequency_1_105 + 2),#0x00
0441 755B00    1491            mov     (_main_print_ref_frequency_1_105 + 3),#0x00
0444           1492   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:353: waitms(500); // Give PuTTy a chance to start before sending
0444 9001F4    1493            mov     dptr,#0x01F4
0447 120000    1494            lcall   _waitms
044A           1495   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:354: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
044A 74A8      1496            mov     a,#__str_0
044C C0E0      1497            push    acc
044E 74C6      1498            mov     a,#(__str_0 >> 8)
0450 C0E0      1499            push    acc
0452 7480      1500            mov     a,#0x80
0454 C0E0      1501            push    acc
0456 120000    1502            lcall   _printf
0459 1581      1503            dec     sp
045B 1581      1504            dec     sp
045D 1581      1505            dec     sp
045F           1506   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:359: __FILE__, __DATE__, __TIME__);
045F           1507   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:358: "Compiled: %s, %s\n\n",
045F 7428      1508            mov     a,#__str_4
0461 C0E0      1509            push    acc
0463 74C7      1510            mov     a,#(__str_4 >> 8)
0465 C0E0      1511            push    acc
0467 7480      1512            mov     a,#0x80
0469 C0E0      1513            push    acc
046B 7468      1514            mov     a,#__str_3
046D C0E0      1515            push    acc
046F 74C7      1516            mov     a,#(__str_3 >> 8)
0471 C0E0      1517            push    acc
0473 7480      1518            mov     a,#0x80
0475 C0E0      1519            push    acc
0477 74A8      1520            mov     a,#__str_2
0479 C0E0      1521            push    acc
047B 74C7      1522            mov     a,#(__str_2 >> 8)
047D C0E0      1523            push    acc
047F 7480      1524            mov     a,#0x80
0481 C0E0      1525            push    acc
0483 74E8      1526            mov     a,#__str_1
0485 C0E0      1527            push    acc
0487 74C7      1528            mov     a,#(__str_1 >> 8)
0489 C0E0      1529            push    acc
048B 7480      1530            mov     a,#0x80
048D C0E0      1531            push    acc
048F 120000    1532            lcall   _printf
0492 E581      1533            mov     a,sp
0494 24F4      1534            add     a,#0xf4
0496 F581      1535            mov     sp,a
0498           1536   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:362: InitPinADC(2, 2); // Configure P2.2 as analog i
0498 75D802    1537            mov     _InitPinADC_PARM_2,#0x02
049B 758202    1538            mov     dpl,#0x02
049E 120000    1539            lcall   _InitPinADC
04A1           1540   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:364: InitPinADC(2, 6); // Configure P2.4 as analog input
04A1 75D806    1541            mov     _InitPinADC_PARM_2,#0x06
04A4 758202    1542            mov     dpl,#0x02
04A7 120000    1543            lcall   _InitPinADC
04AA           1544   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:365: InitADC();
04AA 120000    1545            lcall   _InitADC
04AD           1546   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:366: TIMER0_Init();
04AD 120000    1547            lcall   _TIMER0_Init
04B0           1548   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:367: LCD_4BIT();
04B0 120000    1549            lcall   _LCD_4BIT
04B3           1550   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:371: for (i = 0; i < 2; i++) {
04B3           1551   L019139?:
04B3 E4        1552            clr     a
04B4 F598      1553            mov     _main_i_1_105,a
04B6 F599      1554            mov     (_main_i_1_105 + 1),a
04B8           1555   L019115?:
04B8 C3        1556            clr     c
04B9 E598      1557            mov     a,_main_i_1_105
04BB 9402      1558            subb    a,#0x02
04BD E599      1559            mov     a,(_main_i_1_105 + 1)
04BF 6480      1560            xrl     a,#0x80
04C1 9480      1561            subb    a,#0x80
04C3 4000      1562            jc      L019188?
04C5 020000    1563            ljmp    L019118?
04C8           1564   L019188?:
04C8           1565   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:372: TR0=0; // Stop timer 0
04C8 C28C      1566            clr     _TR0
04CA           1567   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:373: TH0=0; TL0=0; // Reset the timer
04CA 758C00    1568            mov     _TH0,#0x00
04CD 758A00    1569            mov     _TL0,#0x00
04D0           1570   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:374: TF0 = 0; overflow_count = 0;
04D0 C28D      1571            clr     _TF0
04D2           1572   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:375: overflow_count = 0;
04D2 75E800    1573            mov     _overflow_count,#0x00
04D5           1574   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:376: while (P2_1 == 1); // Wait for the signal to be zero
04D5           1575   L019001?:
04D5 20A128    1576            jb      _P2_1,L019001?
04D8           1577   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:377: while (P2_1 == 0); // Wait for the signal to be one
04D8           1578   L019004?:
04D8 30A168    1579            jnb     _P2_1,L019004?
04DB           1580   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:378: TR0=1; // Start timing
04DB D28C      1581            setb    _TR0
04DD           1582   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:379: Timer3us(100);
04DD 758264    1583            mov     dpl,#0x64
04E0 120000    1584            lcall   _Timer3us
04E3           1585   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:380: while (P2_1 == 1) {
04E3           1586   L019009?:
04E3 30A1E8    1587            jnb     _P2_1,L019011?
04E6           1588   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:381: if(TF0 == 1) {
04E6 308DA8    1589            jnb     _TF0,L019009?
04E9           1590   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:382: overflow_count++;
04E9 05E8      1591            inc     _overflow_count
04EB           1592   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:383: TF0 = 0;
04EB C28D      1593            clr     _TF0
04ED 8000      1594            sjmp    L019009?
04EF           1595   L019011?:
04EF           1596   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:386: TR0=0; // Stop timer 0
04EF C28C      1597            clr     _TR0
04F1           1598   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:388: period=((overflow_count * 65536.0 + TH0 * 256.0 + TL0)* (12.0 / SYSCLK));
04F1 85E882    1599            mov     dpl,_overflow_count
04F4 120000    1600            lcall   ___uchar2fs
04F7 AA82      1601            mov     r2,dpl
04F9 AB83      1602            mov     r3,dph
04FB ACF0      1603            mov     r4,b
04FD FD        1604            mov     r5,a
04FE C002      1605            push    ar2
0500 C003      1606            push    ar3
0502 C004      1607            push    ar4
0504 C005      1608            push    ar5
0506 900000    1609            mov     dptr,#0x0000
0509 75F080    1610            mov     b,#0x80
050C 7447      1611            mov     a,#0x47
050E 120000    1612            lcall   ___fsmul
0511 AA82      1613            mov     r2,dpl
0513 AB83      1614            mov     r3,dph
0515 ACF0      1615            mov     r4,b
0517 FD        1616            mov     r5,a
0518 E581      1617            mov     a,sp
051A 24FC      1618            add     a,#0xfc
051C F581      1619            mov     sp,a
051E 858C82    1620            mov     dpl,_TH0
0521 C002      1621            push    ar2
0523 C003      1622            push    ar3
0525 C004      1623            push    ar4
0527 C005      1624            push    ar5
0529 120000    1625            lcall   ___uchar2fs
052C AE82      1626            mov     r6,dpl
052E AF83      1627            mov     r7,dph
0530 A8F0      1628            mov     r0,b
0532 F9        1629            mov     r1,a
0533 C006      1630            push    ar6
0535 C007      1631            push    ar7
0537 C000      1632            push    ar0
0539 C001      1633            push    ar1
053B 900000    1634            mov     dptr,#0x0000
053E 75F080    1635            mov     b,#0x80
0541 7443      1636            mov     a,#0x43
0543 120000    1637            lcall   ___fsmul
0546 AE82      1638            mov     r6,dpl
0548 AF83      1639            mov     r7,dph
054A A8F0      1640            mov     r0,b
054C F9        1641            mov     r1,a
054D E581      1642            mov     a,sp
054F 24FC      1643            add     a,#0xfc
0551 F581      1644            mov     sp,a
0553 D005      1645            pop     ar5
0555 D004      1646            pop     ar4
0557 D003      1647            pop     ar3
0559 D002      1648            pop     ar2
055B C006      1649            push    ar6
055D C007      1650            push    ar7
055F C000      1651            push    ar0
0561 C001      1652            push    ar1
0563 8A82      1653            mov     dpl,r2
0565 8B83      1654            mov     dph,r3
0567 8CF0      1655            mov     b,r4
0569 ED        1656            mov     a,r5
056A 120000    1657            lcall   ___fsadd
056D AA82      1658            mov     r2,dpl
056F AB83      1659            mov     r3,dph
0571 ACF0      1660            mov     r4,b
0573 FD        1661            mov     r5,a
0574 E581      1662            mov     a,sp
0576 24FC      1663            add     a,#0xfc
0578 F581      1664            mov     sp,a
057A AE8A      1665            mov     r6,_TL0
057C 7F00      1666            mov     r7,#0x00
057E 8E82      1667            mov     dpl,r6
0580 8F83      1668            mov     dph,r7
0582 C002      1669            push    ar2
0584 C003      1670            push    ar3
0586 C004      1671            push    ar4
0588 C005      1672            push    ar5
058A 120000    1673            lcall   ___sint2fs
058D AE82      1674            mov     r6,dpl
058F AF83      1675            mov     r7,dph
0591 A8F0      1676            mov     r0,b
0593 F9        1677            mov     r1,a
0594 D005      1678            pop     ar5
0596 D004      1679            pop     ar4
0598 D003      1680            pop     ar3
059A D002      1681            pop     ar2
059C C006      1682            push    ar6
059E C007      1683            push    ar7
05A0 C000      1684            push    ar0
05A2 C001      1685            push    ar1
05A4 8A82      1686            mov     dpl,r2
05A6 8B83      1687            mov     dph,r3
05A8 8CF0      1688            mov     b,r4
05AA ED        1689            mov     a,r5
05AB 120000    1690            lcall   ___fsadd
05AE AA82      1691            mov     r2,dpl
05B0 AB83      1692            mov     r3,dph
05B2 ACF0      1693            mov     r4,b
05B4 FD        1694            mov     r5,a
05B5 E581      1695            mov     a,sp
05B7 24FC      1696            add     a,#0xfc
05B9 F581      1697            mov     sp,a
05BB C002      1698            push    ar2
05BD C003      1699            push    ar3
05BF C004      1700            push    ar4
05C1 C005      1701            push    ar5
05C3 90F4FC    1702            mov     dptr,#0xF4FC
05C6 75F032    1703            mov     b,#0x32
05C9 7434      1704            mov     a,#0x34
05CB 120000    1705            lcall   ___fsmul
05CE 8582D8    1706            mov     _main_period_1_105,dpl
05D1 8583D9    1707            mov     (_main_period_1_105 + 1),dph
05D4 85F0DA    1708            mov     (_main_period_1_105 + 2),b
05D7 F5DB      1709            mov     (_main_period_1_105 + 3),a
05D9 E581      1710            mov     a,sp
05DB 24FC      1711            add     a,#0xfc
05DD F581      1712            mov     sp,a
05DF           1713   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:390: TR0=0; // Stop timer 0
05DF C28C      1714            clr     _TR0
05E1           1715   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:391: TH0=0; TL0=0; // Reset the timer
05E1 758C00    1716            mov     _TH0,#0x00
05E4 758A00    1717            mov     _TL0,#0x00
05E7           1718   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:392: TF0 = 0; overflow_count = 0;
05E7 C28D      1719            clr     _TF0
05E9           1720   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:393: overflow_count = 0;
05E9 75E800    1721            mov     _overflow_count,#0x00
05EC           1722   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:394: while (P2_1 == 1); // Wait for the signal to be zero
05EC           1723   L019012?:
05EC 20A1E8    1724            jb      _P2_1,L019012?
05EF           1725   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:395: while (P2_1 == 0); // Wait for the signal to be one
05EF           1726   L019015?:
05EF 30A128    1727            jnb     _P2_1,L019015?
05F2           1728   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:396: TR0=1; // Start timing
05F2 D28C      1729            setb    _TR0
05F4           1730   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:397: Timer3us(10);
05F4 75820A    1731            mov     dpl,#0x0A
05F7 120000    1732            lcall   _Timer3us
05FA           1733   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:398: while (P2_1 == 1){
05FA           1734   L019020?:
05FA 30A1A8    1735            jnb     _P2_1,L019022?
05FD           1736   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:399: if(TF0 == 1){
05FD 308D68    1737            jnb     _TF0,L019020?
0600           1738   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:400: overflow_count++;
0600 05E8      1739            inc     _overflow_count
0602           1740   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:401: TF0 = 0;
0602 C28D      1741            clr     _TF0
0604 8000      1742            sjmp    L019020?
0606           1743   L019022?:
0606           1744   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:405: TR0=0; // Stop timer 0
0606 C28C      1745            clr     _TR0
0608           1746   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:409: noise_filter=((overflow_count * 65536.0 + TH0 * 256.0 + TL0)* (12.0 / SYSCLK));
0608 85E882    1747            mov     dpl,_overflow_count
060B 120000    1748            lcall   ___uchar2fs
060E AE82      1749            mov     r6,dpl
0610 AF83      1750            mov     r7,dph
0612 A8F0      1751            mov     r0,b
0614 F9        1752            mov     r1,a
0615 C006      1753            push    ar6
0617 C007      1754            push    ar7
0619 C000      1755            push    ar0
061B C001      1756            push    ar1
061D 900000    1757            mov     dptr,#0x0000
0620 75F080    1758            mov     b,#0x80
0623 7447      1759            mov     a,#0x47
0625 120000    1760            lcall   ___fsmul
0628 AE82      1761            mov     r6,dpl
062A AF83      1762            mov     r7,dph
062C A8F0      1763            mov     r0,b
062E F9        1764            mov     r1,a
062F E581      1765            mov     a,sp
0631 24FC      1766            add     a,#0xfc
0633 F581      1767            mov     sp,a
0635 858C82    1768            mov     dpl,_TH0
0638 C006      1769            push    ar6
063A C007      1770            push    ar7
063C C000      1771            push    ar0
063E C001      1772            push    ar1
0640 120000    1773            lcall   ___uchar2fs
0643 AA82      1774            mov     r2,dpl
0645 AB83      1775            mov     r3,dph
0647 ACF0      1776            mov     r4,b
0649 FD        1777            mov     r5,a
064A C002      1778            push    ar2
064C C003      1779            push    ar3
064E C004      1780            push    ar4
0650 C005      1781            push    ar5
0652 900000    1782            mov     dptr,#0x0000
0655 75F080    1783            mov     b,#0x80
0658 7443      1784            mov     a,#0x43
065A 120000    1785            lcall   ___fsmul
065D AA82      1786            mov     r2,dpl
065F AB83      1787            mov     r3,dph
0661 ACF0      1788            mov     r4,b
0663 FD        1789            mov     r5,a
0664 E581      1790            mov     a,sp
0666 24FC      1791            add     a,#0xfc
0668 F581      1792            mov     sp,a
066A D001      1793            pop     ar1
066C D000      1794            pop     ar0
066E D007      1795            pop     ar7
0670 D006      1796            pop     ar6
0672 C002      1797            push    ar2
0674 C003      1798            push    ar3
0676 C004      1799            push    ar4
0678 C005      1800            push    ar5
067A 8E82      1801            mov     dpl,r6
067C 8F83      1802            mov     dph,r7
067E 88F0      1803            mov     b,r0
0680 E9        1804            mov     a,r1
0681 120000    1805            lcall   ___fsadd
0684 AA82      1806            mov     r2,dpl
0686 AB83      1807            mov     r3,dph
0688 ACF0      1808            mov     r4,b
068A FD        1809            mov     r5,a
068B E581      1810            mov     a,sp
068D 24FC      1811            add     a,#0xfc
068F F581      1812            mov     sp,a
0691 AE8A      1813            mov     r6,_TL0
0693 7F00      1814            mov     r7,#0x00
0695 8E82      1815            mov     dpl,r6
0697 8F83      1816            mov     dph,r7
0699 C002      1817            push    ar2
069B C003      1818            push    ar3
069D C004      1819            push    ar4
069F C005      1820            push    ar5
06A1 120000    1821            lcall   ___sint2fs
06A4 AE82      1822            mov     r6,dpl
06A6 AF83      1823            mov     r7,dph
06A8 A8F0      1824            mov     r0,b
06AA F9        1825            mov     r1,a
06AB D005      1826            pop     ar5
06AD D004      1827            pop     ar4
06AF D003      1828            pop     ar3
06B1 D002      1829            pop     ar2
06B3 C006      1830            push    ar6
06B5 C007      1831            push    ar7
06B7 C000      1832            push    ar0
06B9 C001      1833            push    ar1
06BB 8A82      1834            mov     dpl,r2
06BD 8B83      1835            mov     dph,r3
06BF 8CF0      1836            mov     b,r4
06C1 ED        1837            mov     a,r5
06C2 120000    1838            lcall   ___fsadd
06C5 AA82      1839            mov     r2,dpl
06C7 AB83      1840            mov     r3,dph
06C9 ACF0      1841            mov     r4,b
06CB FD        1842            mov     r5,a
06CC E581      1843            mov     a,sp
06CE 24FC      1844            add     a,#0xfc
06D0 F581      1845            mov     sp,a
06D2 C002      1846            push    ar2
06D4 C003      1847            push    ar3
06D6 C004      1848            push    ar4
06D8 C005      1849            push    ar5
06DA 90F4FC    1850            mov     dptr,#0xF4FC
06DD 75F032    1851            mov     b,#0x32
06E0 7434      1852            mov     a,#0x34
06E2 120000    1853            lcall   ___fsmul
06E5 858278    1854            mov     _main_noise_filter_1_105,dpl
06E8 858379    1855            mov     (_main_noise_filter_1_105 + 1),dph
06EB 85F07A    1856            mov     (_main_noise_filter_1_105 + 2),b
06EE F57B      1857            mov     (_main_noise_filter_1_105 + 3),a
06F0 E581      1858            mov     a,sp
06F2 24FC      1859            add     a,#0xfc
06F4 F581      1860            mov     sp,a
06F6           1861   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:411: if(fabsf( (1.0/(2.0*noise_filter)) - (1.0/(2.0*period))) > max_distance){
06F6 C078      1862            push    _main_noise_filter_1_105
06F8 C079      1863            push    (_main_noise_filter_1_105 + 1)
06FA C07A      1864            push    (_main_noise_filter_1_105 + 2)
06FC C07B      1865            push    (_main_noise_filter_1_105 + 3)
06FE 900000    1866            mov     dptr,#(0x00&0x00ff)
0701 E4        1867            clr     a
0702 F5F0      1868            mov     b,a
0704 7440      1869            mov     a,#0x40
0706 120000    1870            lcall   ___fsmul
0709 AA82      1871            mov     r2,dpl
070B AB83      1872            mov     r3,dph
070D ACF0      1873            mov     r4,b
070F FD        1874            mov     r5,a
0710 E581      1875            mov     a,sp
0712 24FC      1876            add     a,#0xfc
0714 F581      1877            mov     sp,a
0716 C002      1878            push    ar2
0718 C003      1879            push    ar3
071A C004      1880            push    ar4
071C C005      1881            push    ar5
071E 900000    1882            mov     dptr,#0x0000
0721 75F080    1883            mov     b,#0x80
0724 743F      1884            mov     a,#0x3F
0726 120000    1885            lcall   ___fsdiv
0729 AA82      1886            mov     r2,dpl
072B AB83      1887            mov     r3,dph
072D ACF0      1888            mov     r4,b
072F FD        1889            mov     r5,a
0730 E581      1890            mov     a,sp
0732 24FC      1891            add     a,#0xfc
0734 F581      1892            mov     sp,a
0736 C002      1893            push    ar2
0738 C003      1894            push    ar3
073A C004      1895            push    ar4
073C C005      1896            push    ar5
073E C0D8      1897            push    _main_period_1_105
0740 C0D9      1898            push    (_main_period_1_105 + 1)
0742 C0DA      1899            push    (_main_period_1_105 + 2)
0744 C0DB      1900            push    (_main_period_1_105 + 3)
0746 900000    1901            mov     dptr,#(0x00&0x00ff)
0749 E4        1902            clr     a
074A F5F0      1903            mov     b,a
074C 7440      1904            mov     a,#0x40
074E 120000    1905            lcall   ___fsmul
0751 AE82      1906            mov     r6,dpl
0753 AF83      1907            mov     r7,dph
0755 A8F0      1908            mov     r0,b
0757 F9        1909            mov     r1,a
0758 E581      1910            mov     a,sp
075A 24FC      1911            add     a,#0xfc
075C F581      1912            mov     sp,a
075E C006      1913            push    ar6
0760 C007      1914            push    ar7
0762 C000      1915            push    ar0
0764 C001      1916            push    ar1
0766 900000    1917            mov     dptr,#0x0000
0769 75F080    1918            mov     b,#0x80
076C 743F      1919            mov     a,#0x3F
076E 120000    1920            lcall   ___fsdiv
0771 AE82      1921            mov     r6,dpl
0773 AF83      1922            mov     r7,dph
0775 A8F0      1923            mov     r0,b
0777 F9        1924            mov     r1,a
0778 E581      1925            mov     a,sp
077A 24FC      1926            add     a,#0xfc
077C F581      1927            mov     sp,a
077E D005      1928            pop     ar5
0780 D004      1929            pop     ar4
0782 D003      1930            pop     ar3
0784 D002      1931            pop     ar2
0786 C006      1932            push    ar6
0788 C007      1933            push    ar7
078A C000      1934            push    ar0
078C C001      1935            push    ar1
078E C006      1936            push    ar6
0790 C007      1937            push    ar7
0792 C000      1938            push    ar0
0794 C001      1939            push    ar1
0796 8A82      1940            mov     dpl,r2
0798 8B83      1941            mov     dph,r3
079A 8CF0      1942            mov     b,r4
079C ED        1943            mov     a,r5
079D 120000    1944            lcall   ___fssub
07A0 AA82      1945            mov     r2,dpl
07A2 AB83      1946            mov     r3,dph
07A4 ACF0      1947            mov     r4,b
07A6 FD        1948            mov     r5,a
07A7 E581      1949            mov     a,sp
07A9 24FC      1950            add     a,#0xfc
07AB F581      1951            mov     sp,a
07AD 8A82      1952            mov     dpl,r2
07AF 8B83      1953            mov     dph,r3
07B1 8CF0      1954            mov     b,r4
07B3 ED        1955            mov     a,r5
07B4 120000    1956            lcall   _fabsf
07B7 AA82      1957            mov     r2,dpl
07B9 AB83      1958            mov     r3,dph
07BB ACF0      1959            mov     r4,b
07BD FD        1960            mov     r5,a
07BE C0C8      1961            push    _main_max_distance_1_105
07C0 C0C9      1962            push    (_main_max_distance_1_105 + 1)
07C2 C0CA      1963            push    (_main_max_distance_1_105 + 2)
07C4 C0CB      1964            push    (_main_max_distance_1_105 + 3)
07C6 8A82      1965            mov     dpl,r2
07C8 8B83      1966            mov     dph,r3
07CA 8CF0      1967            mov     b,r4
07CC ED        1968            mov     a,r5
07CD 120000    1969            lcall   ___fsgt
07D0 AA82      1970            mov     r2,dpl
07D2 E581      1971            mov     a,sp
07D4 24FC      1972            add     a,#0xfc
07D6 F581      1973            mov     sp,a
07D8 D001      1974            pop     ar1
07DA D000      1975            pop     ar0
07DC D007      1976            pop     ar7
07DE D006      1977            pop     ar6
07E0 EA        1978            mov     a,r2
07E1 6000      1979            jz      L019117?
07E3           1980   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:412: max_distance = fabsf( (1.0/(2.0*noise_filter)) - (1.0/(2.0*period)));
07E3 C006      1981            push    ar6
07E5 C007      1982            push    ar7
07E7 C000      1983            push    ar0
07E9 C001      1984            push    ar1
07EB C078      1985            push    _main_noise_filter_1_105
07ED C079      1986            push    (_main_noise_filter_1_105 + 1)
07EF C07A      1987            push    (_main_noise_filter_1_105 + 2)
07F1 C07B      1988            push    (_main_noise_filter_1_105 + 3)
07F3 900000    1989            mov     dptr,#(0x00&0x00ff)
07F6 E4        1990            clr     a
07F7 F5F0      1991            mov     b,a
07F9 7440      1992            mov     a,#0x40
07FB 120000    1993            lcall   ___fsmul
07FE AA82      1994            mov     r2,dpl
0800 AB83      1995            mov     r3,dph
0802 ACF0      1996            mov     r4,b
0804 FD        1997            mov     r5,a
0805 E581      1998            mov     a,sp
0807 24FC      1999            add     a,#0xfc
0809 F581      2000            mov     sp,a
080B C002      2001            push    ar2
080D C003      2002            push    ar3
080F C004      2003            push    ar4
0811 C005      2004            push    ar5
0813 900000    2005            mov     dptr,#0x0000
0816 75F080    2006            mov     b,#0x80
0819 743F      2007            mov     a,#0x3F
081B 120000    2008            lcall   ___fsdiv
081E AA82      2009            mov     r2,dpl
0820 AB83      2010            mov     r3,dph
0822 ACF0      2011            mov     r4,b
0824 FD        2012            mov     r5,a
0825 E581      2013            mov     a,sp
0827 24FC      2014            add     a,#0xfc
0829 F581      2015            mov     sp,a
082B 8A82      2016            mov     dpl,r2
082D 8B83      2017            mov     dph,r3
082F 8CF0      2018            mov     b,r4
0831 ED        2019            mov     a,r5
0832 120000    2020            lcall   ___fssub
0835 AA82      2021            mov     r2,dpl
0837 AB83      2022            mov     r3,dph
0839 ACF0      2023            mov     r4,b
083B FD        2024            mov     r5,a
083C E581      2025            mov     a,sp
083E 24FC      2026            add     a,#0xfc
0840 F581      2027            mov     sp,a
0842 8A82      2028            mov     dpl,r2
0844 8B83      2029            mov     dph,r3
0846 8CF0      2030            mov     b,r4
0848 ED        2031            mov     a,r5
0849 120000    2032            lcall   _fabsf
084C 8582C8    2033            mov     _main_max_distance_1_105,dpl
084F 8583C9    2034            mov     (_main_max_distance_1_105 + 1),dph
0852 85F0CA    2035            mov     (_main_max_distance_1_105 + 2),b
0855 F5CB      2036            mov     (_main_max_distance_1_105 + 3),a
0857           2037   L019117?:
0857           2038   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:371: for (i = 0; i < 2; i++) {
0857 0598      2039            inc     _main_i_1_105
0859 E4        2040            clr     a
085A B598E8    2041            cjne    a,_main_i_1_105,L019198?
085D 0599      2042            inc     (_main_i_1_105 + 1)
085F           2043   L019198?:
085F 020000    2044            ljmp    L019115?
0862           2045   L019118?:
0862           2046   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:420: if(max_distance < 8000){
0862 E4        2047            clr     a
0863 C0E0      2048            push    acc
0865 C0E0      2049            push    acc
0867 74FA      2050            mov     a,#0xFA
0869 C0E0      2051            push    acc
086B 7445      2052            mov     a,#0x45
086D C0E0      2053            push    acc
086F 85C882    2054            mov     dpl,_main_max_distance_1_105
0872 85C983    2055            mov     dph,(_main_max_distance_1_105 + 1)
0875 85CAF0    2056            mov     b,(_main_max_distance_1_105 + 2)
0878 E5CB      2057            mov     a,(_main_max_distance_1_105 + 3)
087A 120000    2058            lcall   ___fslt
087D AA82      2059            mov     r2,dpl
087F E581      2060            mov     a,sp
0881 24FC      2061            add     a,#0xfc
0883 F581      2062            mov     sp,a
0885 EA        2063            mov     a,r2
0886 6000      2064            jz      L019026?
0888           2065   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:424: waitms(400);
0888 900190    2066            mov     dptr,#0x0190
088B 120000    2067            lcall   _waitms
088E           2068   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:425: print_ref_frequency = 1.0/(2.0*noise_filter);
088E C078      2069            push    _main_noise_filter_1_105
0890 C079      2070            push    (_main_noise_filter_1_105 + 1)
0892 C07A      2071            push    (_main_noise_filter_1_105 + 2)
0894 C07B      2072            push    (_main_noise_filter_1_105 + 3)
0896 900000    2073            mov     dptr,#(0x00&0x00ff)
0899 E4        2074            clr     a
089A F5F0      2075            mov     b,a
089C 7440      2076            mov     a,#0x40
089E 120000    2077            lcall   ___fsmul
08A1 AA82      2078            mov     r2,dpl
08A3 AB83      2079            mov     r3,dph
08A5 ACF0      2080            mov     r4,b
08A7 FD        2081            mov     r5,a
08A8 E581      2082            mov     a,sp
08AA 24FC      2083            add     a,#0xfc
08AC F581      2084            mov     sp,a
08AE C002      2085            push    ar2
08B0 C003      2086            push    ar3
08B2 C004      2087            push    ar4
08B4 C005      2088            push    ar5
08B6 900000    2089            mov     dptr,#0x0000
08B9 75F080    2090            mov     b,#0x80
08BC 743F      2091            mov     a,#0x3F
08BE 120000    2092            lcall   ___fsdiv
08C1 858258    2093            mov     _main_print_ref_frequency_1_105,dpl
08C4 858359    2094            mov     (_main_print_ref_frequency_1_105 + 1),dph
08C7 85F05A    2095            mov     (_main_print_ref_frequency_1_105 + 2),b
08CA F55B      2096            mov     (_main_print_ref_frequency_1_105 + 3),a
08CC E581      2097            mov     a,sp
08CE 24FC      2098            add     a,#0xfc
08D0 F581      2099            mov     sp,a
08D2           2100   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:426: printf("\nReference Frequency:%.5f", print_ref_frequency);
08D2 C058      2101            push    _main_print_ref_frequency_1_105
08D4 C059      2102            push    (_main_print_ref_frequency_1_105 + 1)
08D6 C05A      2103            push    (_main_print_ref_frequency_1_105 + 2)
08D8 C05B      2104            push    (_main_print_ref_frequency_1_105 + 3)
08DA 74A8      2105            mov     a,#__str_5
08DC C0E0      2106            push    acc
08DE 74CD      2107            mov     a,#(__str_5 >> 8)
08E0 C0E0      2108            push    acc
08E2 7480      2109            mov     a,#0x80
08E4 C0E0      2110            push    acc
08E6 120000    2111            lcall   _printf
08E9 E581      2112            mov     a,sp
08EB 24F9      2113            add     a,#0xf9
08ED F581      2114            mov     sp,a
08EF 8000      2115            sjmp    L019027?
08F1           2116   L019026?:
08F1           2117   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:428: printf("\nReference Frequency:%.5f", print_ref_frequency);
08F1 C058      2118            push    _main_print_ref_frequency_1_105
08F3 C059      2119            push    (_main_print_ref_frequency_1_105 + 1)
08F5 C05A      2120            push    (_main_print_ref_frequency_1_105 + 2)
08F7 C05B      2121            push    (_main_print_ref_frequency_1_105 + 3)
08F9 74A8      2122            mov     a,#__str_5
08FB C0E0      2123            push    acc
08FD 74CD      2124            mov     a,#(__str_5 >> 8)
08FF C0E0      2125            push    acc
0901 7480      2126            mov     a,#0x80
0903 C0E0      2127            push    acc
0905 120000    2128            lcall   _printf
0908 E581      2129            mov     a,sp
090A 24F9      2130            add     a,#0xf9
090C F581      2131            mov     sp,a
090E           2132   L019027?:
090E           2133   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:432: max_distance = 0;
090E 75C800    2134            mov     _main_max_distance_1_105,#0x00
0911 75C900    2135            mov     (_main_max_distance_1_105 + 1),#0x00
0914 75CA00    2136            mov     (_main_max_distance_1_105 + 2),#0x00
0917 75CB00    2137            mov     (_main_max_distance_1_105 + 3),#0x00
091A           2138   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:438: TR0=0; // Stop timer 0
091A C28C      2139            clr     _TR0
091C           2140   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:439: TH0=0; TL0=0; // Reset the timer
091C 758C00    2141            mov     _TH0,#0x00
091F 758A00    2142            mov     _TL0,#0x00
0922           2143   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:440: TF0 = 0; overflow_count = 0;
0922 C28D      2144            clr     _TF0
0924           2145   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:441: overflow_count = 0;
0924 75E800    2146            mov     _overflow_count,#0x00
0927           2147   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:442: while (P2_1 == 1); // Wait for the signal to be zero
0927           2148   L019028?:
0927 20A128    2149            jb      _P2_1,L019028?
092A           2150   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:443: while (P2_1 == 0); // Wait for the signal to be one
092A           2151   L019031?:
092A 30A168    2152            jnb     _P2_1,L019031?
092D           2153   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:444: TR0=1; // Start timing
092D D28C      2154            setb    _TR0
092F           2155   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:445: Timer3us(10);
092F 75820A    2156            mov     dpl,#0x0A
0932 120000    2157            lcall   _Timer3us
0935           2158   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:446: while (P2_1 == 1){
0935           2159   L019038?:
0935 30A1E8    2160            jnb     _P2_1,L019040?
0938           2161   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:447: if(TF0 == 1){
0938 308D28    2162            jnb     _TF0,L019035?
093B           2163   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:448: overflow_count++;
093B 05E8      2164            inc     _overflow_count
093D           2165   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:449: TF0 = 0;
093D C28D      2166            clr     _TF0
093F           2167   L019035?:
093F           2168   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:451: if(Volts_at_Pin(QFP32_MUX_P2_2) > peak_value) {
093F 75820F    2169            mov     dpl,#0x0F
0942 120000    2170            lcall   _Volts_at_Pin
0945 AA82      2171            mov     r2,dpl
0947 AB83      2172            mov     r3,dph
0949 ACF0      2173            mov     r4,b
094B FD        2174            mov     r5,a
094C C008      2175            push    _main_peak_value_1_105
094E C009      2176            push    (_main_peak_value_1_105 + 1)
0950 C00A      2177            push    (_main_peak_value_1_105 + 2)
0952 C00B      2178            push    (_main_peak_value_1_105 + 3)
0954 8A82      2179            mov     dpl,r2
0956 8B83      2180            mov     dph,r3
0958 8CF0      2181            mov     b,r4
095A ED        2182            mov     a,r5
095B 120000    2183            lcall   ___fsgt
095E AA82      2184            mov     r2,dpl
0960 E581      2185            mov     a,sp
0962 24FC      2186            add     a,#0xfc
0964 F581      2187            mov     sp,a
0966 EA        2188            mov     a,r2
0967 6000      2189            jz      L019038?
0969           2190   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:452: peak_value = Volts_at_Pin(QFP32_MUX_P2_2);
0969 75820F    2191            mov     dpl,#0x0F
096C 120000    2192            lcall   _Volts_at_Pin
096F 858208    2193            mov     _main_peak_value_1_105,dpl
0972 858309    2194            mov     (_main_peak_value_1_105 + 1),dph
0975 85F00A    2195            mov     (_main_peak_value_1_105 + 2),b
0978 F50B      2196            mov     (_main_peak_value_1_105 + 3),a
097A 8000      2197            sjmp    L019038?
097C           2198   L019040?:
097C           2199   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:455: TR0=0; // Stop timer 0
097C C28C      2200            clr     _TR0
097E           2201   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:458: if(peak_value < 0.001){
097E 746F      2202            mov     a,#0x6F
0980 C0E0      2203            push    acc
0982 7412      2204            mov     a,#0x12
0984 C0E0      2205            push    acc
0986 7483      2206            mov     a,#0x83
0988 C0E0      2207            push    acc
098A 743A      2208            mov     a,#0x3A
098C C0E0      2209            push    acc
098E 850882    2210            mov     dpl,_main_peak_value_1_105
0991 850983    2211            mov     dph,(_main_peak_value_1_105 + 1)
0994 850AF0    2212            mov     b,(_main_peak_value_1_105 + 2)
0997 E50B      2213            mov     a,(_main_peak_value_1_105 + 3)
0999 120000    2214            lcall   ___fslt
099C AA82      2215            mov     r2,dpl
099E E581      2216            mov     a,sp
09A0 24FC      2217            add     a,#0xfc
09A2 F581      2218            mov     sp,a
09A4 EA        2219            mov     a,r2
09A5 6000      2220            jz      L019042?
09A7           2221   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:459: printf("\nReference Amplitude:%.5f", print_ref_amplitude);
09A7 C008      2222            push    _main_print_ref_amplitude_1_105
09A9 C009      2223            push    (_main_print_ref_amplitude_1_105 + 1)
09AB C00A      2224            push    (_main_print_ref_amplitude_1_105 + 2)
09AD C00B      2225            push    (_main_print_ref_amplitude_1_105 + 3)
09AF 74A8      2226            mov     a,#__str_6
09B1 C0E0      2227            push    acc
09B3 74CF      2228            mov     a,#(__str_6 >> 8)
09B5 C0E0      2229            push    acc
09B7 7480      2230            mov     a,#0x80
09B9 C0E0      2231            push    acc
09BB 120000    2232            lcall   _printf
09BE E581      2233            mov     a,sp
09C0 24F9      2234            add     a,#0xf9
09C2 F581      2235            mov     sp,a
09C4 8000      2236            sjmp    L019043?
09C6           2237   L019042?:
09C6           2238   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:461: print_ref_amplitude = peak_value;
09C6 850808    2239            mov     _main_print_ref_amplitude_1_105,_main_peak_value_1_105
09C9 850909    2240            mov     (_main_print_ref_amplitude_1_105 + 1),(_main_peak_value_1_105 + 1)
09CC 850A0A    2241            mov     (_main_print_ref_amplitude_1_105 + 2),(_main_peak_value_1_105 + 2)
09CF 850B0B    2242            mov     (_main_print_ref_amplitude_1_105 + 3),(_main_peak_value_1_105 + 3)
09D2           2243   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:462: printf("\nReference Amplitude:%.5f", print_ref_amplitude);
09D2 C008      2244            push    _main_peak_value_1_105
09D4 C009      2245            push    (_main_peak_value_1_105 + 1)
09D6 C00A      2246            push    (_main_peak_value_1_105 + 2)
09D8 C00B      2247            push    (_main_peak_value_1_105 + 3)
09DA 74A8      2248            mov     a,#__str_6
09DC C0E0      2249            push    acc
09DE 74CF      2250            mov     a,#(__str_6 >> 8)
09E0 C0E0      2251            push    acc
09E2 7480      2252            mov     a,#0x80
09E4 C0E0      2253            push    acc
09E6 120000    2254            lcall   _printf
09E9 E581      2255            mov     a,sp
09EB 24F9      2256            add     a,#0xf9
09ED F581      2257            mov     sp,a
09EF           2258   L019043?:
09EF           2259   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:464: peak_value = 0;
09EF           2260   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:473: for (i = 0; i < 2; i++) {
09EF E4        2261            clr     a
09F0 F508      2262            mov     _main_peak_value_1_105,a
09F2 F509      2263            mov     (_main_peak_value_1_105 + 1),a
09F4 F50A      2264            mov     (_main_peak_value_1_105 + 2),a
09F6 F50B      2265            mov     (_main_peak_value_1_105 + 3),a
09F8 F598      2266            mov     _main_i_1_105,a
09FA F599      2267            mov     (_main_i_1_105 + 1),a
09FC           2268   L019119?:
09FC C3        2269            clr     c
09FD E598      2270            mov     a,_main_i_1_105
09FF 9402      2271            subb    a,#0x02
0A01 E599      2272            mov     a,(_main_i_1_105 + 1)
0A03 6480      2273            xrl     a,#0x80
0A05 9480      2274            subb    a,#0x80
0A07 4000      2275            jc      L019206?
0A09 020000    2276            ljmp    L019122?
0A0C           2277   L019206?:
0A0C           2278   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:474: TR0=0; // Stop timer 0
0A0C C28C      2279            clr     _TR0
0A0E           2280   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:475: TH0=0; TL0=0; // Reset the timer
0A0E 758C00    2281            mov     _TH0,#0x00
0A11 758A00    2282            mov     _TL0,#0x00
0A14           2283   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:476: TF0 = 0; overflow_count = 0;
0A14 C28D      2284            clr     _TF0
0A16           2285   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:477: overflow_count = 0;
0A16 75E800    2286            mov     _overflow_count,#0x00
0A19           2287   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:478: while (P2_3 == 1); // Wait for the signal to be zero
0A19           2288   L019044?:
0A19 20A3E8    2289            jb      _P2_3,L019044?
0A1C           2290   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:479: while (P2_3 == 0); // Wait for the signal to be one
0A1C           2291   L019047?:
0A1C 30A328    2292            jnb     _P2_3,L019047?
0A1F           2293   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:480: TR0=1; // Start timing
0A1F D28C      2294            setb    _TR0
0A21           2295   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:481: Timer3us(100);
0A21 758264    2296            mov     dpl,#0x64
0A24 120000    2297            lcall   _Timer3us
0A27           2298   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:482: while (P2_3 == 1) {
0A27           2299   L019052?:
0A27 30A3A8    2300            jnb     _P2_3,L019054?
0A2A           2301   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:483: if(TF0 == 1) {
0A2A 308D68    2302            jnb     _TF0,L019052?
0A2D           2303   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:484: overflow_count++;
0A2D 05E8      2304            inc     _overflow_count
0A2F           2305   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:485: TF0 = 0;
0A2F C28D      2306            clr     _TF0
0A31 8000      2307            sjmp    L019052?
0A33           2308   L019054?:
0A33           2309   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:488: TR0=0; // Stop timer 0
0A33 C28C      2310            clr     _TR0
0A35           2311   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:490: signal_period=((overflow_count * 65536.0 + TH0 * 256.0 + TL0)* (12.0 / SYSCLK));
0A35 85E882    2312            mov     dpl,_overflow_count
0A38 120000    2313            lcall   ___uchar2fs
0A3B AC82      2314            mov     r4,dpl
0A3D AD83      2315            mov     r5,dph
0A3F AEF0      2316            mov     r6,b
0A41 FF        2317            mov     r7,a
0A42 C004      2318            push    ar4
0A44 C005      2319            push    ar5
0A46 C006      2320            push    ar6
0A48 C007      2321            push    ar7
0A4A 900000    2322            mov     dptr,#0x0000
0A4D 75F080    2323            mov     b,#0x80
0A50 7447      2324            mov     a,#0x47
0A52 120000    2325            lcall   ___fsmul
0A55 AC82      2326            mov     r4,dpl
0A57 AD83      2327            mov     r5,dph
0A59 AEF0      2328            mov     r6,b
0A5B FF        2329            mov     r7,a
0A5C E581      2330            mov     a,sp
0A5E 24FC      2331            add     a,#0xfc
0A60 F581      2332            mov     sp,a
0A62 858C82    2333            mov     dpl,_TH0
0A65 C004      2334            push    ar4
0A67 C005      2335            push    ar5
0A69 C006      2336            push    ar6
0A6B C007      2337            push    ar7
0A6D 120000    2338            lcall   ___uchar2fs
0A70 A882      2339            mov     r0,dpl
0A72 A983      2340            mov     r1,dph
0A74 AAF0      2341            mov     r2,b
0A76 FB        2342            mov     r3,a
0A77 C000      2343            push    ar0
0A79 C001      2344            push    ar1
0A7B C002      2345            push    ar2
0A7D C003      2346            push    ar3
0A7F 900000    2347            mov     dptr,#0x0000
0A82 75F080    2348            mov     b,#0x80
0A85 7443      2349            mov     a,#0x43
0A87 120000    2350            lcall   ___fsmul
0A8A AA82      2351            mov     r2,dpl
0A8C AB83      2352            mov     r3,dph
0A8E A8F0      2353            mov     r0,b
0A90 F9        2354            mov     r1,a
0A91 E581      2355            mov     a,sp
0A93 24FC      2356            add     a,#0xfc
0A95 F581      2357            mov     sp,a
0A97 D007      2358            pop     ar7
0A99 D006      2359            pop     ar6
0A9B D005      2360            pop     ar5
0A9D D004      2361            pop     ar4
0A9F C002      2362            push    ar2
0AA1 C003      2363            push    ar3
0AA3 C000      2364            push    ar0
0AA5 C001      2365            push    ar1
0AA7 8C82      2366            mov     dpl,r4
0AA9 8D83      2367            mov     dph,r5
0AAB 8EF0      2368            mov     b,r6
0AAD EF        2369            mov     a,r7
0AAE 120000    2370            lcall   ___fsadd
0AB1 AA82      2371            mov     r2,dpl
0AB3 AB83      2372            mov     r3,dph
0AB5 ACF0      2373            mov     r4,b
0AB7 FD        2374            mov     r5,a
0AB8 E581      2375            mov     a,sp
0ABA 24FC      2376            add     a,#0xfc
0ABC F581      2377            mov     sp,a
0ABE AE8A      2378            mov     r6,_TL0
0AC0 7F00      2379            mov     r7,#0x00
0AC2 8E82      2380            mov     dpl,r6
0AC4 8F83      2381            mov     dph,r7
0AC6 C002      2382            push    ar2
0AC8 C003      2383            push    ar3
0ACA C004      2384            push    ar4
0ACC C005      2385            push    ar5
0ACE 120000    2386            lcall   ___sint2fs
0AD1 AE82      2387            mov     r6,dpl
0AD3 AF83      2388            mov     r7,dph
0AD5 A8F0      2389            mov     r0,b
0AD7 F9        2390            mov     r1,a
0AD8 D005      2391            pop     ar5
0ADA D004      2392            pop     ar4
0ADC D003      2393            pop     ar3
0ADE D002      2394            pop     ar2
0AE0 C006      2395            push    ar6
0AE2 C007      2396            push    ar7
0AE4 C000      2397            push    ar0
0AE6 C001      2398            push    ar1
0AE8 8A82      2399            mov     dpl,r2
0AEA 8B83      2400            mov     dph,r3
0AEC 8CF0      2401            mov     b,r4
0AEE ED        2402            mov     a,r5
0AEF 120000    2403            lcall   ___fsadd
0AF2 AA82      2404            mov     r2,dpl
0AF4 AB83      2405            mov     r3,dph
0AF6 ACF0      2406            mov     r4,b
0AF8 FD        2407            mov     r5,a
0AF9 E581      2408            mov     a,sp
0AFB 24FC      2409            add     a,#0xfc
0AFD F581      2410            mov     sp,a
0AFF C002      2411            push    ar2
0B01 C003      2412            push    ar3
0B03 C004      2413            push    ar4
0B05 C005      2414            push    ar5
0B07 90F4FC    2415            mov     dptr,#0xF4FC
0B0A 75F032    2416            mov     b,#0x32
0B0D 7434      2417            mov     a,#0x34
0B0F 120000    2418            lcall   ___fsmul
0B12 858228    2419            mov     _main_signal_period_1_105,dpl
0B15 858329    2420            mov     (_main_signal_period_1_105 + 1),dph
0B18 85F02A    2421            mov     (_main_signal_period_1_105 + 2),b
0B1B F52B      2422            mov     (_main_signal_period_1_105 + 3),a
0B1D E581      2423            mov     a,sp
0B1F 24FC      2424            add     a,#0xfc
0B21 F581      2425            mov     sp,a
0B23           2426   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:492: TR0=0; // Stop timer 0
0B23 C28C      2427            clr     _TR0
0B25           2428   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:493: TH0=0; TL0=0; // Reset the timer
0B25 758C00    2429            mov     _TH0,#0x00
0B28 758A00    2430            mov     _TL0,#0x00
0B2B           2431   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:494: TF0 = 0; overflow_count = 0;
0B2B C28D      2432            clr     _TF0
0B2D           2433   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:495: overflow_count = 0;
0B2D 75E800    2434            mov     _overflow_count,#0x00
0B30           2435   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:496: while (P2_3 == 1); // Wait for the signal to be zero
0B30           2436   L019055?:
0B30 20A3E8    2437            jb      _P2_3,L019055?
0B33           2438   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:497: while (P2_3 == 0); // Wait for the signal to be one
0B33           2439   L019058?:
0B33 30A328    2440            jnb     _P2_3,L019058?
0B36           2441   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:498: TR0=1; // Start timing
0B36 D28C      2442            setb    _TR0
0B38           2443   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:499: Timer3us(10);
0B38 75820A    2444            mov     dpl,#0x0A
0B3B 120000    2445            lcall   _Timer3us
0B3E           2446   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:500: while (P2_3 == 1){
0B3E           2447   L019063?:
0B3E 30A3A8    2448            jnb     _P2_3,L019065?
0B41           2449   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:501: if(TF0 == 1){
0B41 308D68    2450            jnb     _TF0,L019063?
0B44           2451   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:502: overflow_count++;
0B44 05E8      2452            inc     _overflow_count
0B46           2453   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:503: TF0 = 0;
0B46 C28D      2454            clr     _TF0
0B48 8000      2455            sjmp    L019063?
0B4A           2456   L019065?:
0B4A           2457   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:510: TR0=0; // Stop timer 0
0B4A C28C      2458            clr     _TR0
0B4C           2459   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:514: noise_filter=((overflow_count * 65536.0 + TH0 * 256.0 + TL0)* (12.0 / SYSCLK));
0B4C 85E882    2460            mov     dpl,_overflow_count
0B4F 120000    2461            lcall   ___uchar2fs
0B52 AE82      2462            mov     r6,dpl
0B54 AF83      2463            mov     r7,dph
0B56 A8F0      2464            mov     r0,b
0B58 F9        2465            mov     r1,a
0B59 C006      2466            push    ar6
0B5B C007      2467            push    ar7
0B5D C000      2468            push    ar0
0B5F C001      2469            push    ar1
0B61 900000    2470            mov     dptr,#0x0000
0B64 75F080    2471            mov     b,#0x80
0B67 7447      2472            mov     a,#0x47
0B69 120000    2473            lcall   ___fsmul
0B6C AE82      2474            mov     r6,dpl
0B6E AF83      2475            mov     r7,dph
0B70 A8F0      2476            mov     r0,b
0B72 F9        2477            mov     r1,a
0B73 E581      2478            mov     a,sp
0B75 24FC      2479            add     a,#0xfc
0B77 F581      2480            mov     sp,a
0B79 858C82    2481            mov     dpl,_TH0
0B7C C006      2482            push    ar6
0B7E C007      2483            push    ar7
0B80 C000      2484            push    ar0
0B82 C001      2485            push    ar1
0B84 120000    2486            lcall   ___uchar2fs
0B87 AA82      2487            mov     r2,dpl
0B89 AB83      2488            mov     r3,dph
0B8B ACF0      2489            mov     r4,b
0B8D FD        2490            mov     r5,a
0B8E C002      2491            push    ar2
0B90 C003      2492            push    ar3
0B92 C004      2493            push    ar4
0B94 C005      2494            push    ar5
0B96 900000    2495            mov     dptr,#0x0000
0B99 75F080    2496            mov     b,#0x80
0B9C 7443      2497            mov     a,#0x43
0B9E 120000    2498            lcall   ___fsmul
0BA1 AA82      2499            mov     r2,dpl
0BA3 AB83      2500            mov     r3,dph
0BA5 ACF0      2501            mov     r4,b
0BA7 FD        2502            mov     r5,a
0BA8 E581      2503            mov     a,sp
0BAA 24FC      2504            add     a,#0xfc
0BAC F581      2505            mov     sp,a
0BAE D001      2506            pop     ar1
0BB0 D000      2507            pop     ar0
0BB2 D007      2508            pop     ar7
0BB4 D006      2509            pop     ar6
0BB6 C002      2510            push    ar2
0BB8 C003      2511            push    ar3
0BBA C004      2512            push    ar4
0BBC C005      2513            push    ar5
0BBE 8E82      2514            mov     dpl,r6
0BC0 8F83      2515            mov     dph,r7
0BC2 88F0      2516            mov     b,r0
0BC4 E9        2517            mov     a,r1
0BC5 120000    2518            lcall   ___fsadd
0BC8 AA82      2519            mov     r2,dpl
0BCA AB83      2520            mov     r3,dph
0BCC ACF0      2521            mov     r4,b
0BCE FD        2522            mov     r5,a
0BCF E581      2523            mov     a,sp
0BD1 24FC      2524            add     a,#0xfc
0BD3 F581      2525            mov     sp,a
0BD5 AE8A      2526            mov     r6,_TL0
0BD7 7F00      2527            mov     r7,#0x00
0BD9 8E82      2528            mov     dpl,r6
0BDB 8F83      2529            mov     dph,r7
0BDD C002      2530            push    ar2
0BDF C003      2531            push    ar3
0BE1 C004      2532            push    ar4
0BE3 C005      2533            push    ar5
0BE5 120000    2534            lcall   ___sint2fs
0BE8 AE82      2535            mov     r6,dpl
0BEA AF83      2536            mov     r7,dph
0BEC A8F0      2537            mov     r0,b
0BEE F9        2538            mov     r1,a
0BEF D005      2539            pop     ar5
0BF1 D004      2540            pop     ar4
0BF3 D003      2541            pop     ar3
0BF5 D002      2542            pop     ar2
0BF7 C006      2543            push    ar6
0BF9 C007      2544            push    ar7
0BFB C000      2545            push    ar0
0BFD C001      2546            push    ar1
0BFF 8A82      2547            mov     dpl,r2
0C01 8B83      2548            mov     dph,r3
0C03 8CF0      2549            mov     b,r4
0C05 ED        2550            mov     a,r5
0C06 120000    2551            lcall   ___fsadd
0C09 AA82      2552            mov     r2,dpl
0C0B AB83      2553            mov     r3,dph
0C0D ACF0      2554            mov     r4,b
0C0F FD        2555            mov     r5,a
0C10 E581      2556            mov     a,sp
0C12 24FC      2557            add     a,#0xfc
0C14 F581      2558            mov     sp,a
0C16 C002      2559            push    ar2
0C18 C003      2560            push    ar3
0C1A C004      2561            push    ar4
0C1C C005      2562            push    ar5
0C1E 90F4FC    2563            mov     dptr,#0xF4FC
0C21 75F032    2564            mov     b,#0x32
0C24 7434      2565            mov     a,#0x34
0C26 120000    2566            lcall   ___fsmul
0C29 858278    2567            mov     _main_noise_filter_1_105,dpl
0C2C 858379    2568            mov     (_main_noise_filter_1_105 + 1),dph
0C2F 85F07A    2569            mov     (_main_noise_filter_1_105 + 2),b
0C32 F57B      2570            mov     (_main_noise_filter_1_105 + 3),a
0C34 E581      2571            mov     a,sp
0C36 24FC      2572            add     a,#0xfc
0C38 F581      2573            mov     sp,a
0C3A           2574   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:516: if(fabsf( (1.0/(2.0*noise_filter)) - (1.0/(2.0*signal_period))) > signal_max_distance){
0C3A C078      2575            push    _main_noise_filter_1_105
0C3C C079      2576            push    (_main_noise_filter_1_105 + 1)
0C3E C07A      2577            push    (_main_noise_filter_1_105 + 2)
0C40 C07B      2578            push    (_main_noise_filter_1_105 + 3)
0C42 900000    2579            mov     dptr,#(0x00&0x00ff)
0C45 E4        2580            clr     a
0C46 F5F0      2581            mov     b,a
0C48 7440      2582            mov     a,#0x40
0C4A 120000    2583            lcall   ___fsmul
0C4D AA82      2584            mov     r2,dpl
0C4F AB83      2585            mov     r3,dph
0C51 ACF0      2586            mov     r4,b
0C53 FD        2587            mov     r5,a
0C54 E581      2588            mov     a,sp
0C56 24FC      2589            add     a,#0xfc
0C58 F581      2590            mov     sp,a
0C5A C002      2591            push    ar2
0C5C C003      2592            push    ar3
0C5E C004      2593            push    ar4
0C60 C005      2594            push    ar5
0C62 900000    2595            mov     dptr,#0x0000
0C65 75F080    2596            mov     b,#0x80
0C68 743F      2597            mov     a,#0x3F
0C6A 120000    2598            lcall   ___fsdiv
0C6D AA82      2599            mov     r2,dpl
0C6F AB83      2600            mov     r3,dph
0C71 ACF0      2601            mov     r4,b
0C73 FD        2602            mov     r5,a
0C74 E581      2603            mov     a,sp
0C76 24FC      2604            add     a,#0xfc
0C78 F581      2605            mov     sp,a
0C7A C002      2606            push    ar2
0C7C C003      2607            push    ar3
0C7E C004      2608            push    ar4
0C80 C005      2609            push    ar5
0C82 C028      2610            push    _main_signal_period_1_105
0C84 C029      2611            push    (_main_signal_period_1_105 + 1)
0C86 C02A      2612            push    (_main_signal_period_1_105 + 2)
0C88 C02B      2613            push    (_main_signal_period_1_105 + 3)
0C8A 900000    2614            mov     dptr,#(0x00&0x00ff)
0C8D E4        2615            clr     a
0C8E F5F0      2616            mov     b,a
0C90 7440      2617            mov     a,#0x40
0C92 120000    2618            lcall   ___fsmul
0C95 AE82      2619            mov     r6,dpl
0C97 AF83      2620            mov     r7,dph
0C99 A8F0      2621            mov     r0,b
0C9B F9        2622            mov     r1,a
0C9C E581      2623            mov     a,sp
0C9E 24FC      2624            add     a,#0xfc
0CA0 F581      2625            mov     sp,a
0CA2 C006      2626            push    ar6
0CA4 C007      2627            push    ar7
0CA6 C000      2628            push    ar0
0CA8 C001      2629            push    ar1
0CAA 900000    2630            mov     dptr,#0x0000
0CAD 75F080    2631            mov     b,#0x80
0CB0 743F      2632            mov     a,#0x3F
0CB2 120000    2633            lcall   ___fsdiv
0CB5 AE82      2634            mov     r6,dpl
0CB7 AF83      2635            mov     r7,dph
0CB9 A8F0      2636            mov     r0,b
0CBB F9        2637            mov     r1,a
0CBC E581      2638            mov     a,sp
0CBE 24FC      2639            add     a,#0xfc
0CC0 F581      2640            mov     sp,a
0CC2 D005      2641            pop     ar5
0CC4 D004      2642            pop     ar4
0CC6 D003      2643            pop     ar3
0CC8 D002      2644            pop     ar2
0CCA C006      2645            push    ar6
0CCC C007      2646            push    ar7
0CCE C000      2647            push    ar0
0CD0 C001      2648            push    ar1
0CD2 C006      2649            push    ar6
0CD4 C007      2650            push    ar7
0CD6 C000      2651            push    ar0
0CD8 C001      2652            push    ar1
0CDA 8A82      2653            mov     dpl,r2
0CDC 8B83      2654            mov     dph,r3
0CDE 8CF0      2655            mov     b,r4
0CE0 ED        2656            mov     a,r5
0CE1 120000    2657            lcall   ___fssub
0CE4 AA82      2658            mov     r2,dpl
0CE6 AB83      2659            mov     r3,dph
0CE8 ACF0      2660            mov     r4,b
0CEA FD        2661            mov     r5,a
0CEB E581      2662            mov     a,sp
0CED 24FC      2663            add     a,#0xfc
0CEF F581      2664            mov     sp,a
0CF1 8A82      2665            mov     dpl,r2
0CF3 8B83      2666            mov     dph,r3
0CF5 8CF0      2667            mov     b,r4
0CF7 ED        2668            mov     a,r5
0CF8 120000    2669            lcall   _fabsf
0CFB AA82      2670            mov     r2,dpl
0CFD AB83      2671            mov     r3,dph
0CFF ACF0      2672            mov     r4,b
0D01 FD        2673            mov     r5,a
0D02 C018      2674            push    _main_signal_max_distance_1_105
0D04 C019      2675            push    (_main_signal_max_distance_1_105 + 1)
0D06 C01A      2676            push    (_main_signal_max_distance_1_105 + 2)
0D08 C01B      2677            push    (_main_signal_max_distance_1_105 + 3)
0D0A 8A82      2678            mov     dpl,r2
0D0C 8B83      2679            mov     dph,r3
0D0E 8CF0      2680            mov     b,r4
0D10 ED        2681            mov     a,r5
0D11 120000    2682            lcall   ___fsgt
0D14 AA82      2683            mov     r2,dpl
0D16 E581      2684            mov     a,sp
0D18 24FC      2685            add     a,#0xfc
0D1A F581      2686            mov     sp,a
0D1C D001      2687            pop     ar1
0D1E D000      2688            pop     ar0
0D20 D007      2689            pop     ar7
0D22 D006      2690            pop     ar6
0D24 EA        2691            mov     a,r2
0D25 6000      2692            jz      L019121?
0D27           2693   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:517: signal_max_distance = fabsf( (1.0/(2.0*noise_filter)) - (1.0/(2.0*signal_period)));
0D27 C006      2694            push    ar6
0D29 C007      2695            push    ar7
0D2B C000      2696            push    ar0
0D2D C001      2697            push    ar1
0D2F C078      2698            push    _main_noise_filter_1_105
0D31 C079      2699            push    (_main_noise_filter_1_105 + 1)
0D33 C07A      2700            push    (_main_noise_filter_1_105 + 2)
0D35 C07B      2701            push    (_main_noise_filter_1_105 + 3)
0D37 900000    2702            mov     dptr,#(0x00&0x00ff)
0D3A E4        2703            clr     a
0D3B F5F0      2704            mov     b,a
0D3D 7440      2705            mov     a,#0x40
0D3F 120000    2706            lcall   ___fsmul
0D42 AA82      2707            mov     r2,dpl
0D44 AB83      2708            mov     r3,dph
0D46 ACF0      2709            mov     r4,b
0D48 FD        2710            mov     r5,a
0D49 E581      2711            mov     a,sp
0D4B 24FC      2712            add     a,#0xfc
0D4D F581      2713            mov     sp,a
0D4F C002      2714            push    ar2
0D51 C003      2715            push    ar3
0D53 C004      2716            push    ar4
0D55 C005      2717            push    ar5
0D57 900000    2718            mov     dptr,#0x0000
0D5A 75F080    2719            mov     b,#0x80
0D5D 743F      2720            mov     a,#0x3F
0D5F 120000    2721            lcall   ___fsdiv
0D62 AA82      2722            mov     r2,dpl
0D64 AB83      2723            mov     r3,dph
0D66 ACF0      2724            mov     r4,b
0D68 FD        2725            mov     r5,a
0D69 E581      2726            mov     a,sp
0D6B 24FC      2727            add     a,#0xfc
0D6D F581      2728            mov     sp,a
0D6F 8A82      2729            mov     dpl,r2
0D71 8B83      2730            mov     dph,r3
0D73 8CF0      2731            mov     b,r4
0D75 ED        2732            mov     a,r5
0D76 120000    2733            lcall   ___fssub
0D79 AA82      2734            mov     r2,dpl
0D7B AB83      2735            mov     r3,dph
0D7D ACF0      2736            mov     r4,b
0D7F FD        2737            mov     r5,a
0D80 E581      2738            mov     a,sp
0D82 24FC      2739            add     a,#0xfc
0D84 F581      2740            mov     sp,a
0D86 8A82      2741            mov     dpl,r2
0D88 8B83      2742            mov     dph,r3
0D8A 8CF0      2743            mov     b,r4
0D8C ED        2744            mov     a,r5
0D8D 120000    2745            lcall   _fabsf
0D90 858218    2746            mov     _main_signal_max_distance_1_105,dpl
0D93 858319    2747            mov     (_main_signal_max_distance_1_105 + 1),dph
0D96 85F01A    2748            mov     (_main_signal_max_distance_1_105 + 2),b
0D99 F51B      2749            mov     (_main_signal_max_distance_1_105 + 3),a
0D9B           2750   L019121?:
0D9B           2751   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:473: for (i = 0; i < 2; i++) {
0D9B 0598      2752            inc     _main_i_1_105
0D9D E4        2753            clr     a
0D9E B59828    2754            cjne    a,_main_i_1_105,L019216?
0DA1 0599      2755            inc     (_main_i_1_105 + 1)
0DA3           2756   L019216?:
0DA3 020000    2757            ljmp    L019119?
0DA6           2758   L019122?:
0DA6           2759   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:524: if(signal_max_distance < 8000){
0DA6 E4        2760            clr     a
0DA7 C0E0      2761            push    acc
0DA9 C0E0      2762            push    acc
0DAB 74FA      2763            mov     a,#0xFA
0DAD C0E0      2764            push    acc
0DAF 7445      2765            mov     a,#0x45
0DB1 C0E0      2766            push    acc
0DB3 851882    2767            mov     dpl,_main_signal_max_distance_1_105
0DB6 851983    2768            mov     dph,(_main_signal_max_distance_1_105 + 1)
0DB9 851AF0    2769            mov     b,(_main_signal_max_distance_1_105 + 2)
0DBC E51B      2770            mov     a,(_main_signal_max_distance_1_105 + 3)
0DBE 120000    2771            lcall   ___fslt
0DC1 AA82      2772            mov     r2,dpl
0DC3 E581      2773            mov     a,sp
0DC5 24FC      2774            add     a,#0xfc
0DC7 F581      2775            mov     sp,a
0DC9 EA        2776            mov     a,r2
0DCA 6000      2777            jz      L019069?
0DCC           2778   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:528: waitms(400);
0DCC 900190    2779            mov     dptr,#0x0190
0DCF 120000    2780            lcall   _waitms
0DD2           2781   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:529: print_measured_frequency = 1.0/(2.0*noise_filter);
0DD2 C078      2782            push    _main_noise_filter_1_105
0DD4 C079      2783            push    (_main_noise_filter_1_105 + 1)
0DD6 C07A      2784            push    (_main_noise_filter_1_105 + 2)
0DD8 C07B      2785            push    (_main_noise_filter_1_105 + 3)
0DDA 900000    2786            mov     dptr,#(0x00&0x00ff)
0DDD E4        2787            clr     a
0DDE F5F0      2788            mov     b,a
0DE0 7440      2789            mov     a,#0x40
0DE2 120000    2790            lcall   ___fsmul
0DE5 AA82      2791            mov     r2,dpl
0DE7 AB83      2792            mov     r3,dph
0DE9 ACF0      2793            mov     r4,b
0DEB FD        2794            mov     r5,a
0DEC E581      2795            mov     a,sp
0DEE 24FC      2796            add     a,#0xfc
0DF0 F581      2797            mov     sp,a
0DF2 C002      2798            push    ar2
0DF4 C003      2799            push    ar3
0DF6 C004      2800            push    ar4
0DF8 C005      2801            push    ar5
0DFA 900000    2802            mov     dptr,#0x0000
0DFD 75F080    2803            mov     b,#0x80
0E00 743F      2804            mov     a,#0x3F
0E02 120000    2805            lcall   ___fsdiv
0E05 8582B8    2806            mov     _main_print_measured_frequency_1_105,dpl
0E08 8583B9    2807            mov     (_main_print_measured_frequency_1_105 + 1),dph
0E0B 85F0BA    2808            mov     (_main_print_measured_frequency_1_105 + 2),b
0E0E F5BB      2809            mov     (_main_print_measured_frequency_1_105 + 3),a
0E10 E581      2810            mov     a,sp
0E12 24FC      2811            add     a,#0xfc
0E14 F581      2812            mov     sp,a
0E16           2813   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:530: printf("\nMeasured Frequency:%.5f", print_measured_frequency);
0E16 C0B8      2814            push    _main_print_measured_frequency_1_105
0E18 C0B9      2815            push    (_main_print_measured_frequency_1_105 + 1)
0E1A C0BA      2816            push    (_main_print_measured_frequency_1_105 + 2)
0E1C C0BB      2817            push    (_main_print_measured_frequency_1_105 + 3)
0E1E 74A8      2818            mov     a,#__str_7
0E20 C0E0      2819            push    acc
0E22 74D3      2820            mov     a,#(__str_7 >> 8)
0E24 C0E0      2821            push    acc
0E26 7480      2822            mov     a,#0x80
0E28 C0E0      2823            push    acc
0E2A 120000    2824            lcall   _printf
0E2D E581      2825            mov     a,sp
0E2F 24F9      2826            add     a,#0xf9
0E31 F581      2827            mov     sp,a
0E33 8000      2828            sjmp    L019070?
0E35           2829   L019069?:
0E35           2830   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:532: printf("\nMeasured Frequency:%.5f", print_measured_frequency);
0E35 C0B8      2831            push    _main_print_measured_frequency_1_105
0E37 C0B9      2832            push    (_main_print_measured_frequency_1_105 + 1)
0E39 C0BA      2833            push    (_main_print_measured_frequency_1_105 + 2)
0E3B C0BB      2834            push    (_main_print_measured_frequency_1_105 + 3)
0E3D 74A8      2835            mov     a,#__str_7
0E3F C0E0      2836            push    acc
0E41 74D3      2837            mov     a,#(__str_7 >> 8)
0E43 C0E0      2838            push    acc
0E45 7480      2839            mov     a,#0x80
0E47 C0E0      2840            push    acc
0E49 120000    2841            lcall   _printf
0E4C E581      2842            mov     a,sp
0E4E 24F9      2843            add     a,#0xf9
0E50 F581      2844            mov     sp,a
0E52           2845   L019070?:
0E52           2846   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:536: signal_max_distance = 0;
0E52 751800    2847            mov     _main_signal_max_distance_1_105,#0x00
0E55 751900    2848            mov     (_main_signal_max_distance_1_105 + 1),#0x00
0E58 751A00    2849            mov     (_main_signal_max_distance_1_105 + 2),#0x00
0E5B 751B00    2850            mov     (_main_signal_max_distance_1_105 + 3),#0x00
0E5E           2851   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:542: TR0=0; // Stop timer 0
0E5E C28C      2852            clr     _TR0
0E60           2853   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:543: TH0=0; TL0=0; // Reset the timer
0E60 758C00    2854            mov     _TH0,#0x00
0E63 758A00    2855            mov     _TL0,#0x00
0E66           2856   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:544: TF0 = 0; overflow_count = 0;
0E66 C28D      2857            clr     _TF0
0E68           2858   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:545: overflow_count = 0;
0E68 75E800    2859            mov     _overflow_count,#0x00
0E6B           2860   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:546: while (P2_3 == 1); // Wait for the signal to be zero
0E6B           2861   L019071?:
0E6B 20A328    2862            jb      _P2_3,L019071?
0E6E           2863   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:547: while (P2_3 == 0); // Wait for the signal to be one
0E6E           2864   L019074?:
0E6E 30A368    2865            jnb     _P2_3,L019074?
0E71           2866   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:548: TR0=1; // Start timing
0E71 D28C      2867            setb    _TR0
0E73           2868   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:549: Timer3us(10);
0E73 75820A    2869            mov     dpl,#0x0A
0E76 120000    2870            lcall   _Timer3us
0E79           2871   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:550: while (P2_3 == 1){
0E79           2872   L019081?:
0E79 30A3E8    2873            jnb     _P2_3,L019083?
0E7C           2874   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:551: if(TF0 == 1){
0E7C 308D28    2875            jnb     _TF0,L019078?
0E7F           2876   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:552: overflow_count++;
0E7F 05E8      2877            inc     _overflow_count
0E81           2878   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:553: TF0 = 0;
0E81 C28D      2879            clr     _TF0
0E83           2880   L019078?:
0E83           2881   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:555: temp_volts = Volts_at_Pin(QFP32_MUX_P2_6);
0E83 758213    2882            mov     dpl,#0x13
0E86 120000    2883            lcall   _Volts_at_Pin
0E89 AA82      2884            mov     r2,dpl
0E8B AB83      2885            mov     r3,dph
0E8D ACF0      2886            mov     r4,b
0E8F FD        2887            mov     r5,a
0E90           2888   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:556: if(temp_volts > signal_peak_value) {
0E90 C002      2889            push    ar2
0E92 C003      2890            push    ar3
0E94 C004      2891            push    ar4
0E96 C005      2892            push    ar5
0E98 C068      2893            push    _main_signal_peak_value_1_105
0E9A C069      2894            push    (_main_signal_peak_value_1_105 + 1)
0E9C C06A      2895            push    (_main_signal_peak_value_1_105 + 2)
0E9E C06B      2896            push    (_main_signal_peak_value_1_105 + 3)
0EA0 8A82      2897            mov     dpl,r2
0EA2 8B83      2898            mov     dph,r3
0EA4 8CF0      2899            mov     b,r4
0EA6 ED        2900            mov     a,r5
0EA7 120000    2901            lcall   ___fsgt
0EAA AE82      2902            mov     r6,dpl
0EAC E581      2903            mov     a,sp
0EAE 24FC      2904            add     a,#0xfc
0EB0 F581      2905            mov     sp,a
0EB2 D005      2906            pop     ar5
0EB4 D004      2907            pop     ar4
0EB6 D003      2908            pop     ar3
0EB8 D002      2909            pop     ar2
0EBA EE        2910            mov     a,r6
0EBB 6000      2911            jz      L019081?
0EBD           2912   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:557: signal_peak_value = temp_volts;
0EBD 8A68      2913            mov     _main_signal_peak_value_1_105,r2
0EBF 8B69      2914            mov     (_main_signal_peak_value_1_105 + 1),r3
0EC1 8C6A      2915            mov     (_main_signal_peak_value_1_105 + 2),r4
0EC3 8D6B      2916            mov     (_main_signal_peak_value_1_105 + 3),r5
0EC5 8000      2917            sjmp    L019081?
0EC7           2918   L019083?:
0EC7           2919   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:560: TR0=0; // Stop timer 0
0EC7 C28C      2920            clr     _TR0
0EC9           2921   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:562: if(signal_peak_value < 0.001){
0EC9 746F      2922            mov     a,#0x6F
0ECB C0E0      2923            push    acc
0ECD 7412      2924            mov     a,#0x12
0ECF C0E0      2925            push    acc
0ED1 7483      2926            mov     a,#0x83
0ED3 C0E0      2927            push    acc
0ED5 743A      2928            mov     a,#0x3A
0ED7 C0E0      2929            push    acc
0ED9 856882    2930            mov     dpl,_main_signal_peak_value_1_105
0EDC 856983    2931            mov     dph,(_main_signal_peak_value_1_105 + 1)
0EDF 856AF0    2932            mov     b,(_main_signal_peak_value_1_105 + 2)
0EE2 E56B      2933            mov     a,(_main_signal_peak_value_1_105 + 3)
0EE4 120000    2934            lcall   ___fslt
0EE7 AA82      2935            mov     r2,dpl
0EE9 E581      2936            mov     a,sp
0EEB 24FC      2937            add     a,#0xfc
0EED F581      2938            mov     sp,a
0EEF EA        2939            mov     a,r2
0EF0 6000      2940            jz      L019085?
0EF2           2941   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:563: printf("\nMeasured Amplitude:%.5f", print_signal_peak);
0EF2 C0B8      2942            push    _main_print_signal_peak_1_105
0EF4 C0B9      2943            push    (_main_print_signal_peak_1_105 + 1)
0EF6 C0BA      2944            push    (_main_print_signal_peak_1_105 + 2)
0EF8 C0BB      2945            push    (_main_print_signal_peak_1_105 + 3)
0EFA 74A8      2946            mov     a,#__str_8
0EFC C0E0      2947            push    acc
0EFE 74D5      2948            mov     a,#(__str_8 >> 8)
0F00 C0E0      2949            push    acc
0F02 7480      2950            mov     a,#0x80
0F04 C0E0      2951            push    acc
0F06 120000    2952            lcall   _printf
0F09 E581      2953            mov     a,sp
0F0B 24F9      2954            add     a,#0xf9
0F0D F581      2955            mov     sp,a
0F0F 8000      2956            sjmp    L019086?
0F11           2957   L019085?:
0F11           2958   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:565: print_signal_peak = signal_peak_value;
0F11 8568B8    2959            mov     _main_print_signal_peak_1_105,_main_signal_peak_value_1_105
0F14 8569B9    2960            mov     (_main_print_signal_peak_1_105 + 1),(_main_signal_peak_value_1_105 + 1)
0F17 856ABA    2961            mov     (_main_print_signal_peak_1_105 + 2),(_main_signal_peak_value_1_105 + 2)
0F1A 856BBB    2962            mov     (_main_print_signal_peak_1_105 + 3),(_main_signal_peak_value_1_105 + 3)
0F1D           2963   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:566: printf("\nMeasured Amplitude:%.5f", print_signal_peak);
0F1D C068      2964            push    _main_signal_peak_value_1_105
0F1F C069      2965            push    (_main_signal_peak_value_1_105 + 1)
0F21 C06A      2966            push    (_main_signal_peak_value_1_105 + 2)
0F23 C06B      2967            push    (_main_signal_peak_value_1_105 + 3)
0F25 74A8      2968            mov     a,#__str_8
0F27 C0E0      2969            push    acc
0F29 74D5      2970            mov     a,#(__str_8 >> 8)
0F2B C0E0      2971            push    acc
0F2D 7480      2972            mov     a,#0x80
0F2F C0E0      2973            push    acc
0F31 120000    2974            lcall   _printf
0F34 E581      2975            mov     a,sp
0F36 24F9      2976            add     a,#0xf9
0F38 F581      2977            mov     sp,a
0F3A           2978   L019086?:
0F3A           2979   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:568: signal_peak_value = 0;
0F3A 756800    2980            mov     _main_signal_peak_value_1_105,#0x00
0F3D 756900    2981            mov     (_main_signal_peak_value_1_105 + 1),#0x00
0F40 756A00    2982            mov     (_main_signal_peak_value_1_105 + 2),#0x00
0F43 756B00    2983            mov     (_main_signal_peak_value_1_105 + 3),#0x00
0F46           2984   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:575: TR0=0; // Stop timer 0
0F46 C28C      2985            clr     _TR0
0F48           2986   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:576: TH0=0; TL0=0; // Reset the timer
0F48 758C00    2987            mov     _TH0,#0x00
0F4B 758A00    2988            mov     _TL0,#0x00
0F4E           2989   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:577: TF0 = 0; overflow_count = 0;
0F4E C28D      2990            clr     _TF0
0F50           2991   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:578: overflow_count = 0;
0F50 75E800    2992            mov     _overflow_count,#0x00
0F53           2993   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:579: while (P2_1 == 1); // Wait for the reference to be zero
0F53           2994   L019087?:
0F53 20A128    2995            jb      _P2_1,L019087?
0F56           2996   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:580: while (P2_1 == 0); // Wait for the reference to be one
0F56           2997   L019090?:
0F56 30A168    2998            jnb     _P2_1,L019090?
0F59           2999   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:581: TR0 = 1;                    // Start Timer when reference phasor crosses 0
0F59 D28C      3000            setb    _TR0
0F5B           3001   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:582: while (P2_3 != 0){
0F5B           3002   L019095?:
0F5B 30A3E8    3003            jnb     _P2_3,L019100?
0F5E           3004   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:583: if(TF0 == 1){
0F5E           3005   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:584: TF0 = 0;
0F5E 108D28    3006            jbc     _TF0,L019227?
0F61 8000      3007            sjmp    L019095?
0F63           3008   L019227?:
0F63           3009   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:585: overflow_count++;
0F63 05E8      3010            inc     _overflow_count
0F65           3011   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:588: while(P2_3 == 0){
0F65 8000      3012            sjmp    L019095?
0F67           3013   L019100?:
0F67 20A368    3014            jb      _P2_3,L019102?
0F6A           3015   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:589: if(TF0 == 1){
0F6A           3016   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:590: TF0 = 0;
0F6A 108DA8    3017            jbc     _TF0,L019229?
0F6D 8000      3018            sjmp    L019100?
0F6F           3019   L019229?:
0F6F           3020   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:591: overflow_count++;
0F6F 05E8      3021            inc     _overflow_count
0F71 8000      3022            sjmp    L019100?
0F73           3023   L019102?:
0F73           3024   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:596: TR0 = 0;
0F73 C28C      3025            clr     _TR0
0F75           3026   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:597: time_diff = (overflow_count * 65536.0+TH0 * 256.0 + TL0)* (12.0 / SYSCLK);
0F75 85E882    3027            mov     dpl,_overflow_count
0F78 120000    3028            lcall   ___uchar2fs
0F7B AA82      3029            mov     r2,dpl
0F7D AB83      3030            mov     r3,dph
0F7F ACF0      3031            mov     r4,b
0F81 FD        3032            mov     r5,a
0F82 C002      3033            push    ar2
0F84 C003      3034            push    ar3
0F86 C004      3035            push    ar4
0F88 C005      3036            push    ar5
0F8A 900000    3037            mov     dptr,#0x0000
0F8D 75F080    3038            mov     b,#0x80
0F90 7447      3039            mov     a,#0x47
0F92 120000    3040            lcall   ___fsmul
0F95 AA82      3041            mov     r2,dpl
0F97 AB83      3042            mov     r3,dph
0F99 ACF0      3043            mov     r4,b
0F9B FD        3044            mov     r5,a
0F9C E581      3045            mov     a,sp
0F9E 24FC      3046            add     a,#0xfc
0FA0 F581      3047            mov     sp,a
0FA2 858C82    3048            mov     dpl,_TH0
0FA5 C002      3049            push    ar2
0FA7 C003      3050            push    ar3
0FA9 C004      3051            push    ar4
0FAB C005      3052            push    ar5
0FAD 120000    3053            lcall   ___uchar2fs
0FB0 AE82      3054            mov     r6,dpl
0FB2 AF83      3055            mov     r7,dph
0FB4 A8F0      3056            mov     r0,b
0FB6 F9        3057            mov     r1,a
0FB7 C006      3058            push    ar6
0FB9 C007      3059            push    ar7
0FBB C000      3060            push    ar0
0FBD C001      3061            push    ar1
0FBF 900000    3062            mov     dptr,#0x0000
0FC2 75F080    3063            mov     b,#0x80
0FC5 7443      3064            mov     a,#0x43
0FC7 120000    3065            lcall   ___fsmul
0FCA AE82      3066            mov     r6,dpl
0FCC AF83      3067            mov     r7,dph
0FCE A8F0      3068            mov     r0,b
0FD0 F9        3069            mov     r1,a
0FD1 E581      3070            mov     a,sp
0FD3 24FC      3071            add     a,#0xfc
0FD5 F581      3072            mov     sp,a
0FD7 D005      3073            pop     ar5
0FD9 D004      3074            pop     ar4
0FDB D003      3075            pop     ar3
0FDD D002      3076            pop     ar2
0FDF C006      3077            push    ar6
0FE1 C007      3078            push    ar7
0FE3 C000      3079            push    ar0
0FE5 C001      3080            push    ar1
0FE7 8A82      3081            mov     dpl,r2
0FE9 8B83      3082            mov     dph,r3
0FEB 8CF0      3083            mov     b,r4
0FED ED        3084            mov     a,r5
0FEE 120000    3085            lcall   ___fsadd
0FF1 AA82      3086            mov     r2,dpl
0FF3 AB83      3087            mov     r3,dph
0FF5 ACF0      3088            mov     r4,b
0FF7 FD        3089            mov     r5,a
0FF8 E581      3090            mov     a,sp
0FFA 24FC      3091            add     a,#0xfc
0FFC F581      3092            mov     sp,a
0FFE AE8A      3093            mov     r6,_TL0
1000 7F00      3094            mov     r7,#0x00
1002 8E82      3095            mov     dpl,r6
1004 8F83      3096            mov     dph,r7
1006 C002      3097            push    ar2
1008 C003      3098            push    ar3
100A C004      3099            push    ar4
100C C005      3100            push    ar5
100E 120000    3101            lcall   ___sint2fs
1011 AE82      3102            mov     r6,dpl
1013 AF83      3103            mov     r7,dph
1015 A8F0      3104            mov     r0,b
1017 F9        3105            mov     r1,a
1018 D005      3106            pop     ar5
101A D004      3107            pop     ar4
101C D003      3108            pop     ar3
101E D002      3109            pop     ar2
1020 C006      3110            push    ar6
1022 C007      3111            push    ar7
1024 C000      3112            push    ar0
1026 C001      3113            push    ar1
1028 8A82      3114            mov     dpl,r2
102A 8B83      3115            mov     dph,r3
102C 8CF0      3116            mov     b,r4
102E ED        3117            mov     a,r5
102F 120000    3118            lcall   ___fsadd
1032 AA82      3119            mov     r2,dpl
1034 AB83      3120            mov     r3,dph
1036 ACF0      3121            mov     r4,b
1038 FD        3122            mov     r5,a
1039 E581      3123            mov     a,sp
103B 24FC      3124            add     a,#0xfc
103D F581      3125            mov     sp,a
103F C002      3126            push    ar2
1041 C003      3127            push    ar3
1043 C004      3128            push    ar4
1045 C005      3129            push    ar5
1047 90F4FC    3130            mov     dptr,#0xF4FC
104A 75F032    3131            mov     b,#0x32
104D 7434      3132            mov     a,#0x34
104F 120000    3133            lcall   ___fsmul
1052 AA82      3134            mov     r2,dpl
1054 AB83      3135            mov     r3,dph
1056 ACF0      3136            mov     r4,b
1058 FD        3137            mov     r5,a
1059 E581      3138            mov     a,sp
105B 24FC      3139            add     a,#0xfc
105D F581      3140            mov     sp,a
105F           3141   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:599: phase_diff = (((time_diff*360.0)/(1/print_ref_frequency))); // 
105F C002      3142            push    ar2
1061 C003      3143            push    ar3
1063 C004      3144            push    ar4
1065 C005      3145            push    ar5
1067 900000    3146            mov     dptr,#0x0000
106A 75F0B4    3147            mov     b,#0xB4
106D 7443      3148            mov     a,#0x43
106F 120000    3149            lcall   ___fsmul
1072 AA82      3150            mov     r2,dpl
1074 AB83      3151            mov     r3,dph
1076 ACF0      3152            mov     r4,b
1078 FD        3153            mov     r5,a
1079 E581      3154            mov     a,sp
107B 24FC      3155            add     a,#0xfc
107D F581      3156            mov     sp,a
107F C002      3157            push    ar2
1081 C003      3158            push    ar3
1083 C004      3159            push    ar4
1085 C005      3160            push    ar5
1087 C058      3161            push    _main_print_ref_frequency_1_105
1089 C059      3162            push    (_main_print_ref_frequency_1_105 + 1)
108B C05A      3163            push    (_main_print_ref_frequency_1_105 + 2)
108D C05B      3164            push    (_main_print_ref_frequency_1_105 + 3)
108F 900000    3165            mov     dptr,#0x0000
1092 75F080    3166            mov     b,#0x80
1095 743F      3167            mov     a,#0x3F
1097 120000    3168            lcall   ___fsdiv
109A AE82      3169            mov     r6,dpl
109C AF83      3170            mov     r7,dph
109E A8F0      3171            mov     r0,b
10A0 F9        3172            mov     r1,a
10A1 E581      3173            mov     a,sp
10A3 24FC      3174            add     a,#0xfc
10A5 F581      3175            mov     sp,a
10A7 D005      3176            pop     ar5
10A9 D004      3177            pop     ar4
10AB D003      3178            pop     ar3
10AD D002      3179            pop     ar2
10AF C006      3180            push    ar6
10B1 C007      3181            push    ar7
10B3 C000      3182            push    ar0
10B5 C001      3183            push    ar1
10B7 8A82      3184            mov     dpl,r2
10B9 8B83      3185            mov     dph,r3
10BB 8CF0      3186            mov     b,r4
10BD ED        3187            mov     a,r5
10BE 120000    3188            lcall   ___fsdiv
10C1 AA82      3189            mov     r2,dpl
10C3 AB83      3190            mov     r3,dph
10C5 ACF0      3191            mov     r4,b
10C7 FD        3192            mov     r5,a
10C8 E581      3193            mov     a,sp
10CA 24FC      3194            add     a,#0xfc
10CC F581      3195            mov     sp,a
10CE           3196   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:602: print_phase = phase_diff;
10CE 8A58      3197            mov     _main_print_phase_1_105,r2
10D0 8B59      3198            mov     (_main_print_phase_1_105 + 1),r3
10D2 8C5A      3199            mov     (_main_print_phase_1_105 + 2),r4
10D4 8D5B      3200            mov     (_main_print_phase_1_105 + 3),r5
10D6           3201   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:604: if(phase_diff < 0){
10D6 C002      3202            push    ar2
10D8 C003      3203            push    ar3
10DA C004      3204            push    ar4
10DC C005      3205            push    ar5
10DE E4        3206            clr     a
10DF C0E0      3207            push    acc
10E1 C0E0      3208            push    acc
10E3 C0E0      3209            push    acc
10E5 C0E0      3210            push    acc
10E7 8A82      3211            mov     dpl,r2
10E9 8B83      3212            mov     dph,r3
10EB 8CF0      3213            mov     b,r4
10ED ED        3214            mov     a,r5
10EE 120000    3215            lcall   ___fslt
10F1 AE82      3216            mov     r6,dpl
10F3 E581      3217            mov     a,sp
10F5 24FC      3218            add     a,#0xfc
10F7 F581      3219            mov     sp,a
10F9 D005      3220            pop     ar5
10FB D004      3221            pop     ar4
10FD D003      3222            pop     ar3
10FF D002      3223            pop     ar2
1101 EE        3224            mov     a,r6
1102 6000      3225            jz      L019104?
1104           3226   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:605: print_phase = -1*print_phase;
1104 8A58      3227            mov     _main_print_phase_1_105,r2
1106 8B59      3228            mov     (_main_print_phase_1_105 + 1),r3
1108 8C5A      3229            mov     (_main_print_phase_1_105 + 2),r4
110A ED        3230            mov     a,r5
110B B2E7      3231            cpl     acc.7
110D F55B      3232            mov     (_main_print_phase_1_105 + 3),a
110F           3233   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:606: printf("\nRelative Phase:%.5f\n", print_phase);
110F C002      3234            push    ar2
1111 C003      3235            push    ar3
1113 C004      3236            push    ar4
1115 C005      3237            push    ar5
1117 C058      3238            push    _main_print_phase_1_105
1119 C059      3239            push    (_main_print_phase_1_105 + 1)
111B C05A      3240            push    (_main_print_phase_1_105 + 2)
111D C05B      3241            push    (_main_print_phase_1_105 + 3)
111F 7428      3242            mov     a,#__str_9
1121 C0E0      3243            push    acc
1123 74D8      3244            mov     a,#(__str_9 >> 8)
1125 C0E0      3245            push    acc
1127 7480      3246            mov     a,#0x80
1129 C0E0      3247            push    acc
112B 120000    3248            lcall   _printf
112E E581      3249            mov     a,sp
1130 24F9      3250            add     a,#0xf9
1132 F581      3251            mov     sp,a
1134 D005      3252            pop     ar5
1136 D004      3253            pop     ar4
1138 D003      3254            pop     ar3
113A D002      3255            pop     ar2
113C 8000      3256            sjmp    L019105?
113E           3257   L019104?:
113E           3258   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:609: printf("\nRelative Phase:%.5f\n", 180-print_phase);
113E C002      3259            push    ar2
1140 C003      3260            push    ar3
1142 C004      3261            push    ar4
1144 C005      3262            push    ar5
1146 C002      3263            push    ar2
1148 C003      3264            push    ar3
114A C004      3265            push    ar4
114C C005      3266            push    ar5
114E 900000    3267            mov     dptr,#0x0000
1151 75F034    3268            mov     b,#0x34
1154 7443      3269            mov     a,#0x43
1156 120000    3270            lcall   ___fssub
1159 AE82      3271            mov     r6,dpl
115B AF83      3272            mov     r7,dph
115D A8F0      3273            mov     r0,b
115F F9        3274            mov     r1,a
1160 E581      3275            mov     a,sp
1162 24FC      3276            add     a,#0xfc
1164 F581      3277            mov     sp,a
1166 C006      3278            push    ar6
1168 C007      3279            push    ar7
116A C000      3280            push    ar0
116C C001      3281            push    ar1
116E 7428      3282            mov     a,#__str_9
1170 C0E0      3283            push    acc
1172 74D8      3284            mov     a,#(__str_9 >> 8)
1174 C0E0      3285            push    acc
1176 7480      3286            mov     a,#0x80
1178 C0E0      3287            push    acc
117A 120000    3288            lcall   _printf
117D E581      3289            mov     a,sp
117F 24F9      3290            add     a,#0xf9
1181 F581      3291            mov     sp,a
1183 D005      3292            pop     ar5
1185 D004      3293            pop     ar4
1187 D003      3294            pop     ar3
1189 D002      3295            pop     ar2
118B           3296   L019105?:
118B           3297   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:617: if(P3_7 == 1){
118B 30B7A8    3298            jnb     _P3_7,L019107?
118E           3299   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:618: sprintf(buffer1, "RMS=%1.1fV,f:%4.0f", print_signal_peak/1.41421356237,print_ref_frequency );
118E C002      3300            push    ar2
1190 C003      3301            push    ar3
1192 C004      3302            push    ar4
1194 C005      3303            push    ar5
1196 74F3      3304            mov     a,#0xF3
1198 C0E0      3305            push    acc
119A 7404      3306            mov     a,#0x04
119C C0E0      3307            push    acc
119E 74B5      3308            mov     a,#0xB5
11A0 C0E0      3309            push    acc
11A2 743F      3310            mov     a,#0x3F
11A4 C0E0      3311            push    acc
11A6 85B882    3312            mov     dpl,_main_print_signal_peak_1_105
11A9 85B983    3313            mov     dph,(_main_print_signal_peak_1_105 + 1)
11AC 85BAF0    3314            mov     b,(_main_print_signal_peak_1_105 + 2)
11AF E5BB      3315            mov     a,(_main_print_signal_peak_1_105 + 3)
11B1 120000    3316            lcall   ___fsdiv
11B4 AE82      3317            mov     r6,dpl
11B6 AF83      3318            mov     r7,dph
11B8 A8F0      3319            mov     r0,b
11BA F9        3320            mov     r1,a
11BB E581      3321            mov     a,sp
11BD 24FC      3322            add     a,#0xfc
11BF F581      3323            mov     sp,a
11C1 C058      3324            push    _main_print_ref_frequency_1_105
11C3 C059      3325            push    (_main_print_ref_frequency_1_105 + 1)
11C5 C05A      3326            push    (_main_print_ref_frequency_1_105 + 2)
11C7 C05B      3327            push    (_main_print_ref_frequency_1_105 + 3)
11C9 C006      3328            push    ar6
11CB C007      3329            push    ar7
11CD C000      3330            push    ar0
11CF C001      3331            push    ar1
11D1 74E8      3332            mov     a,#__str_10
11D3 C0E0      3333            push    acc
11D5 74D8      3334            mov     a,#(__str_10 >> 8)
11D7 C0E0      3335            push    acc
11D9 7480      3336            mov     a,#0x80
11DB C0E0      3337            push    acc
11DD 74E8      3338            mov     a,#_main_buffer1_1_105
11DF C0E0      3339            push    acc
11E1 74B9      3340            mov     a,#(_main_buffer1_1_105 >> 8)
11E3 C0E0      3341            push    acc
11E5 E4        3342            clr     a
11E6 C0E0      3343            push    acc
11E8 120000    3344            lcall   _sprintf
11EB E581      3345            mov     a,sp
11ED 24F2      3346            add     a,#0xf2
11EF F581      3347            mov     sp,a
11F1 D005      3348            pop     ar5
11F3 D004      3349            pop     ar4
11F5 D003      3350            pop     ar3
11F7 D002      3351            pop     ar2
11F9 8000      3352            sjmp    L019108?
11FB           3353   L019107?:
11FB           3354   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:620: sprintf(buffer1, "Pk=%1.1fV,f:%4.0f", print_signal_peak,print_ref_frequency );
11FB C002      3355            push    ar2
11FD C003      3356            push    ar3
11FF C004      3357            push    ar4
1201 C005      3358            push    ar5
1203 C058      3359            push    _main_print_ref_frequency_1_105
1205 C059      3360            push    (_main_print_ref_frequency_1_105 + 1)
1207 C05A      3361            push    (_main_print_ref_frequency_1_105 + 2)
1209 C05B      3362            push    (_main_print_ref_frequency_1_105 + 3)
120B C0B8      3363            push    _main_print_signal_peak_1_105
120D C0B9      3364            push    (_main_print_signal_peak_1_105 + 1)
120F C0BA      3365            push    (_main_print_signal_peak_1_105 + 2)
1211 C0BB      3366            push    (_main_print_signal_peak_1_105 + 3)
1213 74A8      3367            mov     a,#__str_11
1215 C0E0      3368            push    acc
1217 74D9      3369            mov     a,#(__str_11 >> 8)
1219 C0E0      3370            push    acc
121B 7480      3371            mov     a,#0x80
121D C0E0      3372            push    acc
121F 74E8      3373            mov     a,#_main_buffer1_1_105
1221 C0E0      3374            push    acc
1223 74B9      3375            mov     a,#(_main_buffer1_1_105 >> 8)
1225 C0E0      3376            push    acc
1227 E4        3377            clr     a
1228 C0E0      3378            push    acc
122A 120000    3379            lcall   _sprintf
122D E581      3380            mov     a,sp
122F 24F2      3381            add     a,#0xf2
1231 F581      3382            mov     sp,a
1233 D005      3383            pop     ar5
1235 D004      3384            pop     ar4
1237 D003      3385            pop     ar3
1239 D002      3386            pop     ar2
123B           3387   L019108?:
123B           3388   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:623: LCDprint(buffer1, 1, 1);
123B 75A801    3389            mov     _LCDprint_PARM_2,#0x01
123E D2C8      3390            setb    _LCDprint_PARM_3
1240 90B9E8    3391            mov     dptr,#_main_buffer1_1_105
1243 75F000    3392            mov     b,#0x00
1246 C002      3393            push    ar2
1248 C003      3394            push    ar3
124A C004      3395            push    ar4
124C C005      3396            push    ar5
124E 120000    3397            lcall   _LCDprint
1251 D005      3398            pop     ar5
1253 D004      3399            pop     ar4
1255 D003      3400            pop     ar3
1257 D002      3401            pop     ar2
1259           3402   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:625: if(phase_diff < 0) {
1259 E4        3403            clr     a
125A C0E0      3404            push    acc
125C C0E0      3405            push    acc
125E C0E0      3406            push    acc
1260 C0E0      3407            push    acc
1262 8A82      3408            mov     dpl,r2
1264 8B83      3409            mov     dph,r3
1266 8CF0      3410            mov     b,r4
1268 ED        3411            mov     a,r5
1269 120000    3412            lcall   ___fslt
126C AA82      3413            mov     r2,dpl
126E E581      3414            mov     a,sp
1270 24FC      3415            add     a,#0xfc
1272 F581      3416            mov     sp,a
1274 EA        3417            mov     a,r2
1275 6000      3418            jz      L019110?
1277           3419   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:626: sprintf(buffer1, "P=%.1f LAGGING", print_phase);
1277 C058      3420            push    _main_print_phase_1_105
1279 C059      3421            push    (_main_print_phase_1_105 + 1)
127B C05A      3422            push    (_main_print_phase_1_105 + 2)
127D C05B      3423            push    (_main_print_phase_1_105 + 3)
127F 7428      3424            mov     a,#__str_12
1281 C0E0      3425            push    acc
1283 74DA      3426            mov     a,#(__str_12 >> 8)
1285 C0E0      3427            push    acc
1287 7480      3428            mov     a,#0x80
1289 C0E0      3429            push    acc
128B 74E8      3430            mov     a,#_main_buffer1_1_105
128D C0E0      3431            push    acc
128F 74B9      3432            mov     a,#(_main_buffer1_1_105 >> 8)
1291 C0E0      3433            push    acc
1293 E4        3434            clr     a
1294 C0E0      3435            push    acc
1296 120000    3436            lcall   _sprintf
1299 E581      3437            mov     a,sp
129B 24F6      3438            add     a,#0xf6
129D F581      3439            mov     sp,a
129F 8000      3440            sjmp    L019111?
12A1           3441   L019110?:
12A1           3442   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:629: sprintf(buffer1, "P=%.1f LEADING", -1*print_phase);
12A1 AA58      3443            mov     r2,_main_print_phase_1_105
12A3 AB59      3444            mov     r3,(_main_print_phase_1_105 + 1)
12A5 AC5A      3445            mov     r4,(_main_print_phase_1_105 + 2)
12A7 E55B      3446            mov     a,(_main_print_phase_1_105 + 3)
12A9 B2E7      3447            cpl     acc.7
12AB FD        3448            mov     r5,a
12AC C002      3449            push    ar2
12AE C003      3450            push    ar3
12B0 C004      3451            push    ar4
12B2 C005      3452            push    ar5
12B4 74A8      3453            mov     a,#__str_13
12B6 C0E0      3454            push    acc
12B8 74DA      3455            mov     a,#(__str_13 >> 8)
12BA C0E0      3456            push    acc
12BC 7480      3457            mov     a,#0x80
12BE C0E0      3458            push    acc
12C0 74E8      3459            mov     a,#_main_buffer1_1_105
12C2 C0E0      3460            push    acc
12C4 74B9      3461            mov     a,#(_main_buffer1_1_105 >> 8)
12C6 C0E0      3462            push    acc
12C8 E4        3463            clr     a
12C9 C0E0      3464            push    acc
12CB 120000    3465            lcall   _sprintf
12CE E581      3466            mov     a,sp
12D0 24F6      3467            add     a,#0xf6
12D2 F581      3468            mov     sp,a
12D4           3469   L019111?:
12D4           3470   ;        C:\Year2\ELEC291\Lab5\ELEC291-lab5\lab5.c:632: LCDprint2(buffer1, 2, 1);
12D4 755802    3471            mov     _LCDprint2_PARM_2,#0x02
12D7 D278      3472            setb    _LCDprint2_PARM_3
12D9 90B9E8    3473            mov     dptr,#_main_buffer1_1_105
12DC 75F000    3474            mov     b,#0x00
12DF 120000    3475            lcall   _LCDprint2
12E2 020000    3476            ljmp    L019139?
12E5           3477            rseg R_CSEG
12E5           3478   
0000           3479            rseg R_XINIT
0000           3480   
0000           3481            rseg R_CONST
0000           3482   __str_0:
0000 1B        3483            db 0x1B
0001 5B324A    3484            db '[2J'
0004 00        3485            db 0x00
0005           3486   __str_1:
0005 41444320  3487            db 'ADC test program'
     74657374
     2070726F
     6772616D
0015 0A        3488            db 0x0A
0016 46696C65  3489            db 'File: %s'
     3A202573
001E 0A        3490            db 0x0A
001F 436F6D70  3491            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
002F 0A        3492            db 0x0A
0030 0A        3493            db 0x0A
0031 00        3494            db 0x00
0032           3495   __str_2:
0032 433A      3496            db 'C:'
0034 5C        3497            db 0x5C
0035 59656172  3498            db 'Year2'
     32
003A 5C        3499            db 0x5C
003B 454C4543  3500            db 'ELEC291'
     323931
0042 5C        3501            db 0x5C
0043 4C616235  3502            db 'Lab5'
0047 5C        3503            db 0x5C
0048 454C4543  3504            db 'ELEC291-lab5'
     3239312D
     6C616235
0054 5C        3505            db 0x5C
0055 6C616235  3506            db 'lab5.c'
     2E63
005B 00        3507            db 0x00
005C           3508   __str_3:
005C 4D617220  3509            db 'Mar  7 2024'
     20372032
     303234
0067 00        3510            db 0x00
0068           3511   __str_4:
0068 31353A32  3512            db '15:29:38'
     393A3338
0070 00        3513            db 0x00
0071           3514   __str_5:
0071 0A        3515            db 0x0A
0072 52656665  3516            db 'Reference Frequency:%.5f'
     72656E63
     65204672
     65717565
     6E63793A
     252E3566
008A 00        3517            db 0x00
008B           3518   __str_6:
008B 0A        3519            db 0x0A
008C 52656665  3520            db 'Reference Amplitude:%.5f'
     72656E63
     6520416D
     706C6974
     7564653A
     252E3566
00A4 00        3521            db 0x00
00A5           3522   __str_7:
00A5 0A        3523            db 0x0A
00A6 4D656173  3524            db 'Measured Frequency:%.5f'
     75726564
     20467265
     7175656E
     63793A25
     2E3566
00BD 00        3525            db 0x00
00BE           3526   __str_8:
00BE 0A        3527            db 0x0A
00BF 4D656173  3528            db 'Measured Amplitude:%.5f'
     75726564
     20416D70
     6C697475
     64653A25
     2E3566
00D6 00        3529            db 0x00
00D7           3530   __str_9:
00D7 0A        3531            db 0x0A
00D8 52656C61  3532            db 'Relative Phase:%.5f'
     74697665
     20506861
     73653A25
     2E3566
00EB 0A        3533            db 0x0A
00EC 00        3534            db 0x00
00ED           3535   __str_10:
00ED 524D533D  3536            db 'RMS=%1.1fV,f:%4.0f'
     25312E31
     66562C66
     3A25342E
     3066
00FF 00        3537            db 0x00
0100           3538   __str_11:
0100 506B3D25  3539            db 'Pk=%1.1fV,f:%4.0f'
     312E3166
     562C663A
     25342E30
     66
0111 00        3540            db 0x00
0112           3541   __str_12:
0112 503D252E  3542            db 'P=%.1f LAGGING'
     3166204C
     41474749
     4E47
0120 00        3543            db 0x00
0121           3544   __str_13:
0121 503D252E  3545            db 'P=%.1f LEADING'
     3166204C
     45414449
     4E47
012F 00        3546            db 0x00
0130           3547   
0003           3548            CSEG
0003           3549   
0003           3550   end
